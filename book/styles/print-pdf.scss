---
# Print styles
---

// What is this?
// -------------
// This is typography for the Electric Book Elements theme (see http://electricbook.works).
// It is built with Sass. (See http://sass-lang.com, and http://jekyllrb.com/docs/assets for how Jekyll implements Sass.)
// It sets defaults that can be overridden in each book's own stylesheets, where the variables here are duplicated.
//
// How to use it
// -------------
// Edit the default variables below.
// Comment/uncomment or add font imports below.
// Add your own custom CSS at the bottom.

// First, let's set character encoding. Don't change this.
@charset "utf-8";

// -----------------------------
// Understanding our page layout
// -----------------------------

// Here is a diagram of the column-based grid for our page layout. This shows a left-hand page.
// The right hand page is its mirror image.

// _____________________________________________________________________________________
// |         |               |     |               |     |                |            |
// |         |               |     |               |     |                |            |
// |         |               |     |               |     |                |            |
// |    1    |       2       |  3  |       4       |  5  |        6       |      7     |
// |         |               |     |               |     |                |            |
// |         |               |     |                                      |            |
// | sidebar |    sidebar    | gap |           main text area             |   margin   |
// | margin  |               |     |                                      |   inside   |
// | outside |               |     |               |     |                |            |
// |         |               |     |               |     |                |            |
// _____________________________________________________________________________________
//
//           <---------------------------- content width ----------------->


// Our page has a main text area (4-6) and a sidebar (2). They are based on a three-column grid,
// where the sidebar occupies the first column, and the main text area occupies the other two, plus
// the notional column gap between them (5).

// We use variables to define the width of these areas. Some are set explicitly:
// - $page-width: the total width of the printed page.
// - $sidebar-margin-outside (1): the space between the edge of the page and the content in the sidebar.
// - $margin-inside (7): the space between the main text area and the spine of the book.

// We also set the ratio between the width of each column and the column-gap as a $column-gap-ratio value.
// By default, this ratio is 10:1, where the column is ten times the width of the gap.
// We set $column-gap-ratio as a single number: the first value in the ratio, e.g. '10'.
// A higher ratio (e.g. 11:1) will narrow the gap, and widen the columns.
// A lower ratio (e.g. 9:1) will widen the gap, and narrow the columns.

// Our stylesheet then automatically calculates column and gap widths based on that ratio,
// and stores them in these three variables we can use in our styling:
// - $sidebar-text-width (2): the width of the sidebar
// - $sidebar-margin-inside (3): the gap between the sidebar text and the main text area.
// - $main-text-width (4-6): the width of the main text area.

// The automatic calculation first subtracts the margins from the page width, to get the content-width.
// It then divides the content width into column-grid units, using your $column-gap-ratio value.
// If your $column-gap-ratio is 10 (the default), there are 32 column-grid units:
// (10 × 3 columns) + 2 column gaps = 32 column-grid units.
// If your $column-gap-ratio were 9 (i.e. narrower columns, wider gap), there would be 29 column-grid units:
// (9 × 3 columns) + 2 column gaps = 29 column-grid units.
// To get the width of a column-grid unit ($grid-unit-width) the stylesheet first divides the content width
// by the total number of column-grid units. For example:
// if the content-width is 160mm and there are 32 column-grid units, each column-grid unit is 5mm wide.
// Each gap (3 and 5 in the diagram above) is one column-grid unit, which is 5mm in this example.
// Then, to get the final $sidebar-text-width, the stylesheet multiplies the $column-gap-ratio
// by the $grid-unit-width. E.g. 10 × 5mm = 50mm.
// And to get the final $main-text-width, the stylesheet multiplies the $column-gap-ratio
// by twice that, plus a gap width: (10 × 5mm × 2) + 5mm = 105mm.

// -------------
// Set variables
// -------------

// Edition suffix: identifies this edition in page-fitting classes (in _print-fitting.scss).
// For instance, a .tighten class in HTML might apply to your bookshop edition, but not the schools edition.
// A suffix '-schools-edn' would mean only tags with that suffix would apply to that edition, e.g. {:.tighten-schools-edn}
// If you're only planning one edition and use default tags ({:.tighten} not {:.tighten-schools-edn}), leave as null.
$edition-suffix: null;

// First, we set several variables related to overall page setup.
// $page-width: 203mm; // 195mm; // 203mm; // 254 x 203mm (8 x 10 inches), standard and provided for by Createspace and Ingram/LightningSource print-on-demand
// $page-height: 254mm; // 265mm; // 254mm;

// OUP standard size
$page-width: 195mm;
$page-height: 265mm;

// Set the outermost margins explicitly (e.g. influenced by printer and book thickness)

$margin-top: 19mm;
$margin-bottom: 21mm;
$sidebar-margin-outside: 12mm; // 8mm;
$margin-inside: 25mm;

// As a single integer, set the ratio of the column width to column-gap width.
// That is, how wide is a column, as a multiple of the column-gap?
// A higher number makes the column wider, and the gap smaller.
// A lower number makes the column narrower, and the gap wider.
$column-gap-ratio: 10;

// ------------------------------------------------------------------------------------------
// Now we calculate various widths based on the above settings.
// Do not change these calculations or terrible things will happen to your layout.
$content-width: $page-width - $sidebar-margin-outside - $margin-inside;
$grid-unit-width: $content-width / ($column-gap-ratio * 3 + 2);
$sidebar-text-width: $grid-unit-width * $column-gap-ratio;
$sidebar-margin-inside: $grid-unit-width;
$main-text-width: ($column-gap-ratio * $grid-unit-width * 2) + $grid-unit-width;
// $margin-outside is the distance from the edge of the page to the main text area. The sidebar
// is outside the 'normal' margin. Move items into the sidebar with negative $margin-outside.
$margin-outside: $sidebar-text-width + $sidebar-margin-inside + $sidebar-margin-outside;
// Done calculating.
// ------------------------------------------------------------------------------------------

// The standard curve to use on rounded corners
$core-element-border-radius: 5mm;

// The standard width of rules/borders
$border-width: 1pt;

// Print output bleed and marks

// Printer-ready settings
$bleed: 5mm;
$trim: 5mm;

// Review-PDF settings:
// $bleed: 0mm;
// $trim: 0mm;

$crop-marks: crop; // crop | none

// Colours
$colorspace: cmyk; // auto | none | rgb | cmyk | gray
$color-text-main: cmyk(0,0,0,0.8);
$color-text-secondary: cmyk(0,0,0,0.8);
$color-background: white;
$color-light: cmyk(0,0,0,0.1);
$color-mid: cmyk(0,0,0,0.5);
$color-accent: #4BB4C5; // CORE Blue - bit modified
$color-links: inherit;
$color-highlight: #ffd54d;

// PDF file setup options
// Options for pdf-profile: PDF/A-1b, PDF/A-3b, PDF/X-1a:2001, PDF/X-1a:2003, PDF/X-3:2002, PDF/X-3:2003, PDF/X-4
// Options for color profile:
// - From eci.org: PSOcoated_v3.icc, PSOuncoated_v3_FOGRA52.icc
// - From color.org: sRGB_v4_ICC_preference.icc, sRGB_v4_ICC_preference_displayclass.icc
// Add other ICC profiles to /assets/profiles
$pdf-profile: "PDF/X-1a:2001";
$color-profile: "PSOcoated_v3.icc";
$black-ink: true; // true or rich (true for pure black or rich for rich black)

// We name font variables for two categories:
// - 'text' fonts are used for body text and some page features;
// - 'display' fonts are used for headings and similar short-string features.
// For each category, we set a main font and a secondary font, allowing up to four fonts.
// Finally, we set a fifth, monospace font for elements like computer code.
$font-text-main: "Crimson", "DejaVu Serif", "DejaVu Math", prince-no-fallback;
$font-text-secondary: "Asap", "DejaVu Sans", "DejaVu Math", prince-no-fallback;
$font-display-main: "Montserrat", "DejaVu Sans", "DejaVu Math", prince-no-fallback;
$font-display-secondary: "Asap", "DejaVu Sans", "DejaVu Math", prince-no-fallback;
$font-code: "DejaVu Mono", "DejaVu Math", prince-no-fallback;

// Finally, we set variables related to text flow.
$font-size-default: 10pt;
$line-height-default: 12pt; // Set in points. For consistent baselines, all other line heights and vertical spaces are based on this.
$font-size-smaller: 0.8; // How much smaller than font-size-default for features like sidenotes and footers?
$font-size-bigger: 2; // How many times bigger than font-size-default for features like headings and pullquotes? Use whole numbers to preserve baseline grid.
$text-align: left; // left or right or inside or outside or justify or center
$orphans: 2; // Minimum number of lines that must be left at the bottom of the first page
$widows: 2; // Minimum number of lines that must be left at the top of the second page
$letter-spacing-text: 0em; // Default letter-spacing for p, ul, ol, dl. Set in ems, e.g. 0.01em for 10/1000s of an em.

// Do you want space between paragraphs, rather than a text-indent?
$spaced-paras: false;

// Buttons
$button-border-radius: 0.1em; // Roundness of button corners.

// Hyphenation
// Variables here apply to p, ul, ol, dl
$hyphenation: auto; // Can be auto, none, or manual (only breaks on hyphens and soft hyphens)
$hyphenation-dictionary: "hyphenation.dic"; // Path to dictionary file, relative to `/book/styles`. E.g. "../../assets/hyph.dic". Overrides PrinceXML built-in hyphenation.
$hyphenation-custom: replace; // add or replace. Whether your dictionary adds to or replaces the built-in Prince dictionaries
$hyphenate-after: 3; // Minimum letters on new line after hyphen
$hyphenate-before: 3; // Minimum letters at end of line before hyphen
$hyphenate-lines: 1; // Preferred maximum number of consecutive lines ending with hyphens

// Should chapters start on a right-hand page (recto) or on any page?
// This setting applies to the frontmatter, dedication-page, epigraph-page and chapter page styles.
// (The halftitle-page, title-page and contents-page page styles always start on a recto.)
$start-on: right; // right or auto or left ()

// Set the default start-depth of pages.
// This is the distance from the top of the page to the first element on the first page.
// Set it in multiples of $line-height-default to preserve your baseline grid.
$start-depth: 0;

// Style of page numbers on frontmatter pages
// Remember to tag links to front matter pages in your TOC with {:.frontmatter-reference}
$frontmatter-reference-style: lower-roman; // lower-roman, decimal, see http://www.princexml.com/doc/gen-content/#idp54010640

// Set the content of headers and footers.
//
// * For no content: normal
// * For a page number: counter(page)
// * For the body element's title attribute: string(page-header)
//   Set this body title attribute with `header: Your Title` in a file's YAML frontmatter.
//   If you don't set a page header in YAML, string(page-header) will fallback to the page title.
// * For the title attribute of the last h1 (increment to h2, h3, h4, h5, h6 as needed): string(h1-title, last)
//   By default, this uses the heading text, unless you manually set a title attribute for a given heading.
//   In kramdown, use {: title="Your Title Here" } after the heading to set the title manually.
// * For the last h1 (increment to h2, h3, h4, h5, h6 as needed): string(h1-text, last)
//   Instead of last (last on page) you can also use first (first on page) or start (string set on previous page).
// * For a phrase: "Any phrase in quotes"
// * For an em space: "\2003"
// * For other special characters, see CSS (ISO) at https://brajeshwar.github.io/entities/

// Verso (left-hand-page)
$verso-top: string(h1-title, last);
$verso-top-left: normal;
$verso-top-right: normal;
$verso-top-left-corner: "\2009"; // need content for box to appear at all, here a \2009 thin space
$verso-top-right-corner: normal;
$verso-bottom: normal;
$verso-bottom-left: normal;
$verso-bottom-right: normal;
$verso-bottom-left-corner: counter(page);
$verso-bottom-right-corner: normal;

// Recto (right-hand-page)
$recto-top: string(h2-title, last);
$recto-top-left: normal;
$recto-top-right: normal;
$recto-top-left-corner: normal;
$recto-top-right-corner: "\2009"; // need content for box to appear at all, here a \2009 thin space
$recto-bottom: normal;
$recto-bottom-left: normal;
$recto-bottom-right: normal;
$recto-bottom-left-corner: normal;
$recto-bottom-right-corner: counter(page);

// Verso (left-hand-page) for .frontmatter pages (`style: frontmatter`)
$verso-top-frontmatter: string(h1-title, last);
$verso-top-left-frontmatter: normal;
$verso-top-right-frontmatter: normal;
$verso-top-left-corner-frontmatter: "\2009"; // need content for box to appear at all, here a \2009 thin space
$verso-top-right-corner-frontmatter: normal;
$verso-bottom-frontmatter: normal;
$verso-bottom-left-frontmatter: normal;
$verso-bottom-right-frontmatter: normal;
$verso-bottom-left-corner-frontmatter: counter(page, $frontmatter-reference-style);
$verso-bottom-right-corner-frontmatter: normal;

// Recto (right-hand-page) for .frontmatter pages (`style: frontmatter`)
$recto-top-frontmatter: string(h2-title, last);
$recto-top-left-frontmatter: normal;
$recto-top-right-frontmatter: normal;
$recto-top-left-corner-frontmatter: normal;
$recto-top-right-corner-frontmatter: "\2009"; // need content for box to appear at all, here a \2009 thin space
$recto-bottom-frontmatter: normal;
$recto-bottom-left-frontmatter: normal;
$recto-bottom-right-frontmatter: normal;
$recto-bottom-left-corner-frontmatter: normal;
$recto-bottom-right-corner-frontmatter: counter(page, $frontmatter-reference-style);

// Special highlights for temporary debugging/viewing:
// Specify a colour for highlighting; use 'inherit' for none.
$highlight-tightened: inherit;
$highlight-loosened: inherit;

// ---------------------------------
// Set to false to turn partials off
// ---------------------------------

// ---------------------
// Reset PrinceXML CSS
$print-css-reset: true;

// --------------------------------------------
// Page setup and control, avoid changing these
$print-pdf-view: true; // Sets the default initial view on PDFs
$print-page-setup: true; // Sets up the page from your variables
$print-page-break-tools: true; // Provides classes for semantic page breaks
$print-hide-non-printing: true; // Hides anything .non-printing
$print-fitting: true; // Classes for floating, tracking, shrinking, etc.
$print-hyphenation: true; // Sets hyphenation dictionary

// ---------------------
// Theme modules
$print-start-on-recto-or-verso: true; // Starts chapters on a left- or right-hand-page
$print-page-start-depth: true; // Sets a top margin on opening pages
$print-base-typography: true; // Default typography for HTML elements
$print-buttons: true;
$print-verse: true; // Default typography for verse, poetry, lyrics
$print-bibliographies: true;
$print-epigraphs: true; //
$print-dedications: true; //
$print-glossaries: true; // Including .glossary
$print-highlighter: true;
$print-pullquotes: true; // Supports .pullquote
$print-boxes: true; //
$print-code: true; // For computer code and preformatted text
$print-tables: true; //
$print-figures: true; //
$print-notes: true; // Footnotes, endnotes, sidenotes
$print-previous-publications-page: true; // The 'also by the author' frontmatter apge
$print-title-pages: true; // Half-title and title pages
$print-copyright-page: true; //
$print-toc: true; // Tables of contents
$print-cover: true; // Front-cover image for PDF ebooks
$print-smallcaps: true; //
$print-maths: true; //
$print-letters: true; //
$print-sources: true; //
$print-openers: true; //
$print-index: true; //
$print-reset-sequences: true; // Resets p indents, margins after other elements. Must be last @import in list.
$print-page-headers-footers-content: true; // Sets content for headers and footers
$print-page-headers-footers-style: true; // Sets styling for headers and footers

// ------------
// Import fonts
// ------------

// Add @font-face rules for fonts you specify here.
// Add the actual font files to `../fonts`
// For snippets, try https://github.com/arthurattwell/font-faces

/* Crimson https://github.com/skosch/Crimson */
@font-face {
    font-family: "Crimson";
    src: url(../fonts/Crimson-Roman.otf);
}
@font-face {
    font-family: "Crimson";
    src: url(../fonts/Crimson-Italic.otf);
    font-style: italic;
}
@font-face {
    font-family: "Crimson";
    src: url(../fonts/Crimson-Bold.otf);
    font-weight: bold;
}
@font-face {
    font-family: "Crimson";
    src: url(../fonts/Crimson-BoldItalic.otf);
    font-weight: bold;
    font-style: italic;
}
@font-face {
    font-family: "Crimson";
    src: url(../fonts/Crimson-Semibold.otf);
    font-weight: 600;
}
@font-face {
    font-family: "Crimson";
    src: url(../fonts/Crimson-SemiboldItalic.otf);
    font-weight: 600;
    font-style: italic;
}

/* Asap https://fonts.google.com/specimen/Asap */
@font-face {
    font-family: "Asap";
    src: url(../fonts/Asap-Regular.ttf);
}
@font-face {
    font-family: "Asap";
    src: url(../fonts/Asap-Italic.ttf);
    font-style: italic;
}
@font-face {
    font-family: "Asap";
    src: url(../fonts/Asap-Bold.ttf);
    font-weight: bold;
}
@font-face {
    font-family: "Asap";
    src: url(../fonts/Asap-BoldItalic.ttf);
    font-weight: bold;
    font-style: italic;
}
@font-face {
    font-family: "Asap";
    src: url(../fonts/Asap-Medium.ttf);
    font-weight: 600;
}
@font-face {
    font-family: "Asap";
    src: url(../fonts/Asap-MediumItalic.ttf);
    font-weight: 600;
    font-style: italic;
}

/* Montserrat https://www.google.com/fonts/specimen/Montserrat
 * Or https://github.com/google/fonts/tree/master/ofl/montserrat
 * If you're using the Truetype (.ttf) files, substitute .ttf for .otf
 * in the file names below.
 */

@font-face {
    font-family: "Montserrat";
    src: url(../fonts/Montserrat-Thin.otf);
    font-weight: 100;
}
@font-face {
    font-family: "Montserrat";
    src: url(../fonts/Montserrat-ExtraLight.otf);
    font-weight: 200;
}
@font-face {
    font-family: "Montserrat";
    src: url(../fonts/Montserrat-Light.otf);
    font-weight: 300;
}
@font-face {
    font-family: "Montserrat";
    src: url(../fonts/Montserrat-Regular.otf);
}
@font-face {
    font-family: "Montserrat";
    src: url(../fonts/Montserrat-Medium.otf);
    font-weight: 500;
}
@font-face {
    font-family: "Montserrat";
    src: url(../fonts/Montserrat-Semibold.otf);
    font-weight: 600;
}
@font-face {
    font-family: "Montserrat";
    src: url(../fonts/Montserrat-Bold.otf);
    font-weight: bold;
}
@font-face {
    font-family: "Montserrat";
    src: url(../fonts/Montserrat-ExtraBold.otf);
    font-weight: 800;
}
@font-face {
    font-family: "Montserrat";
    src: url(../fonts/Montserrat-Black.otf);
    font-weight: 900;
}

/* DejaVu https://dejavu-fonts.github.io */
@font-face {
    font-family: "DejaVu Serif";
    src: url(../fonts/DejaVuSerif.ttf);
}
@font-face {
    font-family: "DejaVu Serif";
    src: url(../fonts/DejaVuSerif-Italic.ttf);
    font-style: italic;
}
@font-face {
    font-family: "DejaVu Serif";
    src: url(../fonts/DejaVuSerif-Bold.ttf);
    font-weight: bold;
}
@font-face {
    font-family: "DejaVu Serif";
    src: url(../fonts/DejaVuSerif-BoldItalic.ttf);
    font-weight: bold;
    font-style: italic;
}

/* DejaVu https://dejavu-fonts.github.io */
@font-face {
    font-family: "DejaVu Sans";
    src: url(../fonts/DejaVuSans.ttf);
}
@font-face {
    font-family: "DejaVu Sans";
    src: url(../fonts/DejaVuSans-Oblique.ttf);
    font-style: italic;
}
@font-face {
    font-family: "DejaVu Sans";
    src: url(../fonts/DejaVuSans-Bold.ttf);
    font-weight: bold;
}
@font-face {
    font-family: "DejaVu Sans";
    src: url(../fonts/DejaVuSans-BoldOblique.ttf);
    font-weight: bold;
    font-style: italic;
}

/* DejaVu https://dejavu-fonts.github.io */
@font-face {
    font-family: "DejaVu Mono";
    src: url(../fonts/DejaVuSansMono.ttf);
}
@font-face {
    font-family: "DejaVu Mono";
    src: url(../fonts/DejaVuSansMono-Oblique.ttf);
    font-style: italic;
}
@font-face {
    font-family: "DejaVu Mono";
    src: url(../fonts/DejaVuSansMono-Bold.ttf);
    font-weight: bold;
}
@font-face {
    font-family: "DejaVu Mono";
    src: url(../fonts/DejaVuSansMono-BoldOblique.ttf);
    font-weight: bold;
    font-style: italic;
}

/* DejaVu Math https://dejavu-fonts.github.io */
@font-face {
    font-family: "DejaVu Math";
    src: url(../fonts/DejaVuMathTeXGyre.ttf);
    font-weight: bold;
    font-style: italic;
}

// -------------
// Master theme
// -------------

// Import master styles
@import 'print-pdf';

// -------------
// Custom styles
// -------------

// Variables (in addition to variables above)
// ------------------------------------------

$core-red: $color-accent; // #f05a5b        // cmyk(0,0.8,0.6,0)      // rgb(241,91,91)   // also $color-accent

$theme-17-color: #9F6B5B;  // cmyk(0.28,0.57,0.62,0) // rgb(188,126,104) // 17 Great Depression
$theme-18-color: #4BB4C5;   // cmyk(0.45,0,0.29,0)    // rgb(111,201,193) // 18 World Economy
$theme-19-color: #F48356; // cmyk(0,0.61,0.63,0)    // rgb(244,130,97)  // 19 Economic Inequality
$theme-20-color: #92BD6D;  // cmyk(0.4,0,0.62,0)     // rgb(160,209,135) // 20 Environment
$theme-21-color: #E4A95A; // cmyk(0,0.28,0.67,0)    // rgb(253,191,106) // 21 Innovation
$theme-22-color: #AD80A6; // cmyk(0.26,0.52,0.1,0)  // rgb(189,136,174) // 22 Politics and Power

// We also save the hex value without the hash, to use
// in interpolation when setting background-image file names
$theme-17-color-hex-chars: 9F6B5B;
$theme-18-color-hex-chars: 4BB4C5;
$theme-19-color-hex-chars: F48356;
$theme-20-color-hex-chars: 92BD6D;
$theme-21-color-hex-chars: E4A95A;
$theme-22-color-hex-chars: AD80A6;

// Add functions for tint and shade
// Thanks https://css-tricks.com/snippets/sass/tint-shade-functions/
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}






// Big font: http://patorjk.com/software/taag/#p=display&c=c%2B%2B&f=ANSI%20Shadow

//  ████████╗██╗   ██╗██████╗ ███████╗
//  ╚══██╔══╝╚██╗ ██╔╝██╔══██╗██╔════╝
//     ██║    ╚████╔╝ ██████╔╝█████╗  
//     ██║     ╚██╔╝  ██╔═══╝ ██╔══╝  
//     ██║      ██║   ██║     ███████╗
//     ╚═╝      ╚═╝   ╚═╝     ╚══════╝


// Base typography
// ---------------

// Global settings on body

body {
    // Allow linebreaks after em dashes by replacing them with
    // em dash followed by zero-width space. See
    // http://www.princexml.com/forum/topic/2613/allow-linebreak-before-or-after-em-dash
    prince-text-replace: '\2014' '\2014\200b';
}

// Headings

h1, h2, h3, h4, h5, h6,
.subheadline {
    hyphens: manual;
    // Not needed while global wids and orphs are both set to 2:
    // // Avoid lonely lines under headings at bottoms of pages
    // & + p {
    //     page-break-inside: avoid;
    // }
    // Don't allow a page break after a floated note that follows a heading
    & + .sidenote,
    & + .footnote-detail {
        page-break-after: avoid;
    }
    &.page-break-before {
        margin-top: 0;
    }
}

// h1
@mixin pinch() {
    background-image: url("../images/pinch-top.svg"), url("../images/pinch-bottom.svg");
    background-repeat: no-repeat;
    background-position: top center, bottom center;
    background-size: 18mm;
}

@mixin head-1() {
    // Appearance
    font-family: $font-display-main;
    font-weight: bold;
    font-size: $font-size-default * 2.4;
    letter-spacing: 0.025em;
    line-height: $line-height-default * 2;
    text-transform: uppercase;
    text-align: center;
    color: white;
    // Position
    display: inline-block;
    position: relative; // required for positioning children
    padding: ($line-height-default * 1) $line-height-default ($line-height-default * 3) $line-height-default; // extra padding to accommodate bg images
    margin-top: $line-height-default; // 13mm - ($line-height-default * 2); // (13mm - one line added at :after element below) + 17mm page margin = 30mm from top of page
    margin-bottom: $line-height-default * 9;
    margin-inside: 0; // start at the left edge of the text area
    margin-outside: -($margin-outside - $margin-inside); //-43mm; // 68mm textarea margin less 25mm from edge of page, effectively centres the element on the page
    @include pinch();
    // The line above the heading text
    // Must be :before because always same distance from top.
    // I can't get this border to match the width of the text, but
    // it may be fine design-wise to have a consistent width here.
    &:before {
        content: "\2009"; // \2009 thin space
        border-top: $border-width solid white;
        width: 100%;
        position: relative;
        display: inline-block;
        transform: translatey($line-height-default * 3.5); // move down into position
    }
    // The block behind the heading
    &:after {
        // Appearance
        content: "\2009"; // \2009 thin space
        background: $color-accent;
        border-radius: $core-element-border-radius;
        // Position
        z-index: -1;
        width: $main-text-width + ($margin-outside - $margin-inside); // 153mm;
        display: block;
        position: absolute;
        left: 0;
        right: 0;
        top: $line-height-default * 2; // allow parents top padding to show to accommodate bg iamge
        bottom: $line-height-default * 2; // allow parent's bottom padding to show to acoomodate bg image
    }
    // The chapter number, if <strong> in the HTML
    strong:first-of-type {
        display: block;
        font-weight: normal;
        font-size: $font-size-default * 1.2;
        line-height: $line-height-default;
        padding: 0 0 $line-height-default 0;
    }
}

@mixin head-1-reverse() {
    color: $color-accent;
    background: none;
    &:before {
        border-color: $color-accent;
    }
    &:after {
        background-color: white;
    }
}

h1 {
    // This is inheriting some stuff from the template's partials.
    @include head-1();
}

// h2
@mixin head-2() {
    font-family: $font-display-main;
    font-size: $font-size-default;
    font-weight: bold;
    line-height: $line-height-default;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    color: $color-accent;
    margin-top: $line-height-default;
    margin-bottom: 0;
    text-indent: 0; // necessary for when this mixin is used for paragraphs
}

h2,
.subheadline {
    // This is inheriting some stuff from the template's partials.
    @include head-2();
    // Don't break a paragraph that follows an h2.
    // This is mostly to avoid one line of text appearing at the
    // bottom of a page after an h2.
    & + p {
        page-break-inside: avoid;
        text-indent: 0;
    }
}
// Only after a subheadline, paras and lists have space above them
// to set off the subheadline for greater visual impact.
// Sidebar elements should also shift down accordingly.
.subheadline {
    & + p, & + ul, & + ol,
    & + .definition,
    & + .sidenote,
    & + .info {
        margin-top: $line-height-default;
    }
}

@mixin head-3() {
    font-family: $font-text-main;
    font-size: $font-size-default * 1.2; // 12pt;
    font-weight: 600;
    font-style: italic;
    line-height: $line-height-default;
    color: $color-accent;
    margin-top: $line-height-default;
    margin-bottom: 0;
}

// h3
h3 {
    // This is inheriting some stuff from the template's partials.
    @include head-3();
}

@mixin head-4() {
    font-family: $font-text-main;
    font-size: $font-size-default * 1.2; // 12pt;
    font-weight: 600;
    font-style: italic;
    line-height: $line-height-default;
    margin-top: $line-height-default;
    margin-bottom: 0;
}

// h4
h4 {
    // This is inheriting some stuff from the template's partials.
    @include head-4();
}

@mixin head-5() {
    font-family: $font-text-main;
    font-weight: 600;
    line-height: $line-height-default;
    margin-top: $line-height-default;
    margin-bottom: 0;
}

// h5
h5 {
    // This is inheriting some stuff from the template's partials.
    @include head-5();
}

@mixin head-6() {
    font-family: $font-text-main;
    line-height: $line-height-default;
    margin-top: $line-height-default;
    margin-bottom: 0;
}

// h6
h6 {
    // This is inheriting some stuff from the template's partials.
    @include head-6();
}

// Lists

ol, ul {
    margin-top: $line-height-default;
    li {
        // Allow page breaks after single-item lists.
        // (Template styles avoids a page break after first list item.)
        &:nth-child(1):nth-last-child(1) {
            page-break-after: auto;
        }
        ol, ul {
            margin: 0; // no space above nested lists; need to test this thoroughly
        }
    }
    &.no-bullets, li.no-bullets {
        list-style-type: none;
    }
}

// Nested ordered lists, OUP-style
.chapter {
    ol > li > ol > li::marker {
        content: "(" counter(list-item, lower-alpha) ")";
        font-style: italic;
    }
}

// Blockquotes

blockquote {
    p:last-of-type {
        // Override inherited template style, which sets
        // margin-left to 0 for last-child.
        &.source {
            margin-left: $line-height-default;
        }
    }
    + p {
        text-indent: 0;
    }
}

// Tables

table {
    width: $main-text-width - 0.1pt; // lets sidenotes float alongside
    // Center text in merged cells
    th[colspan], td[colspan]:first-of-type {
        // text-align: center; // this was a bad default
    }
    th[rowspan], td[rowspan] {
        vertical-align: middle;
    }
    // Some special classes for layout needs
    &.even-columns {
        td:nth-of-type(1):nth-last-of-type(2) {
            width: 50%;
        }
        td:nth-of-type(1):nth-last-of-type(3),
        td:nth-of-type(2):nth-last-of-type(2),
        td:nth-of-type(3):nth-last-of-type(1) {
            width: 33%;
        }
        td:nth-of-type(1):nth-last-of-type(4),
        td:nth-of-type(2):nth-last-of-type(3),
        td:nth-of-type(3):nth-last-of-type(2),
        td:nth-of-type(4):nth-last-of-type(4) {
            width: 25%;
        }
        td:nth-of-type(1):nth-last-of-type(5),
        td:nth-of-type(2):nth-last-of-type(4),
        td:nth-of-type(3):nth-last-of-type(3),
        td:nth-of-type(4):nth-last-of-type(2),
        td:nth-of-type(5):nth-last-of-type(1), {
            width: 20%;
        }
    }
    // Let users specify cell text alignment
    &.align-right, .align-right {
        text-align: right;
    }
    &.align-left, .align-left {
        text-align: left;
    }
    &.align-center, .align-center {
        text-align: center;
    }
    // Let users shrink font, e.g. in big tables, either by adding this class
    // to a parent (e.g. .figure) or to the table itself.
    .shrink-95pc &,
    &.shrink-95pc {
        font-size: 95%;
    }

    // Let users add vertical rules between columns
    &.table-vertical-rules {
        td, th {
            border-right: 0.5pt solid $color-light;
            &:last-of-type {
                border-right: 0;
            }
        }
    }

    // Let users divide two-column tables 50/50
    &.table-50-50 {
    // where rows have only two cells, space them 50/50
        td:nth-of-type(1):nth-last-of-type(2),
        td:nth-of-type(2):nth-last-of-type(1) {
            width: 50%;
        }
    }
}


// Let users force table elements to look like thead rows
.thead {
    text-align: center;
    font-weight: bold;
}

// Images

img {
    &.thumbnail {
        max-width: $sidebar-text-width;
        float: right;
        padding: 0 0 $line-height-default ($line-height-default / 2);
        margin: 0;
    }
}

.team-gallery {
    float: top next;
    width: $content-width + $line-height-default; // extra width allows for margin-outside on the outermost member
    margin-outside: -($sidebar-text-width + $sidebar-margin-inside);
    font-family: $font-text-secondary;
    font-size: $font-size-default * $font-size-smaller;
    text-align: center;
    .team-gallery-member {
        height: $line-height-default * 10; // instead of height; a workaround for vertical alignment
        width: ($content-width / 6 - $line-height-default);
        margin-outside: $line-height-default;
        margin-bottom: $line-height-default;
        display: block;
        float: left;
        text-align: center;
        line-height: $line-height-default;
        img {
            width: 100%;
        }
        .team-gallery-member-name {
            font-weight: bold;
            display: block;
        }
        .team-gallery-member-institution {
        }
    }
}





//  ███████╗███████╗ █████╗ ████████╗██╗   ██╗██████╗ ███████╗███████╗
//  ██╔════╝██╔════╝██╔══██╗╚══██╔══╝██║   ██║██╔══██╗██╔════╝██╔════╝
//  █████╗  █████╗  ███████║   ██║   ██║   ██║██████╔╝█████╗  ███████╗
//  ██╔══╝  ██╔══╝  ██╔══██║   ██║   ██║   ██║██╔══██╗██╔══╝  ╚════██║
//  ██║     ███████╗██║  ██║   ██║   ╚██████╔╝██║  ██║███████╗███████║
//  ╚═╝     ╚══════╝╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝╚══════╝

// Book features
// -------------

// General frontmatter and endmatter

.frontmatter {
    width: $content-width;
    margin-outside: -($sidebar-text-width + $sidebar-margin-inside);
    column-count: 2;
    column-gap: $grid-unit-width;
    h1 {
        @include head-1-reverse();
        column-span: all;
        display: block;
        margin-outside: 0;
        // remove border above heading text
        &:before {
            // content: normal;
            border: 0;
        }
    }
    .subheadline {
        column-span: all;
        margin-top: -($line-height-default * 10);
        margin-bottom: $line-height-default * 14;
        font-family: $font-text-secondary;
        text-align: center;
        text-transform: none;
        letter-spacing: $letter-spacing-text;
        font-size: $font-size-default * 1.8;
        line-height: $line-height-default * 2;
    }
    .figure, .figure.figure-no-source {
        float: column-top-corner;
        width: ($content-width / 2) - $grid-unit-width;
        margin: 0 0 $line-height-default 0;
        .figure-body {
            width: ($content-width / 2) - $grid-unit-width;
            img {
                width: 100%;
            }
            table {
                width: 100%;
            }
        }
        &.fixed {
            float: none;
            margin-top: $line-height-default;
        }
        &.float-column-bottom {
            float: column-bottom;
            margin-top: $line-height-default * 2;
            margin-bottom: 0;
        }
        &.float-bottom-full-width {
            float: bottom;
            column-span: all;
            margin-bottom: 0;
            margin-top: $line-height-default * 2;
            // margin-inside: 0;
            margin-outside: -($sidebar-margin-inside + $sidebar-text-width);
            width: $content-width;
            .figure-body {
                width: 100%;
            }
        }
        &.wide {
            float: bottom;
            margin-top: $line-height-default * 2;
            margin-bottom: 0;
            margin-outside: -($sidebar-text-width + $sidebar-margin-inside);
            column-span: all;
            width: $content-width;
            .figure-body {
                width: 100%;
                .caption {
                    margin-outside: 0;
                }
            }
            table {
                // 50-50 tables in wide figures need padding to align the
                // text in them with two-column body text
                &.table-50-50 {
                    td, th {
                        &:first-of-type {
                            padding-right: ($grid-unit-width / 2) - 0.25pt; // 0.25pt is for half of cell border
                        }
                        &:last-of-type {
                            padding-left: ($grid-unit-width / 2) - 0.25pt; // 0.25pt is for half of cell border
                        }
                    }
                }
            }
        }
    }
}

// Title pages

.half-title-page {
    margin-top: $line-height-default * 16; // align with title on main title page
    .title-page-title, .title-page-subtitle {
        @include head-1();
        // reverse colours
        @include head-1-reverse();
        // border above heading text
        &:before {
            width: 8em;
        }
        padding-bottom: 0;
        margin-bottom: 0;
        display: block;
    }
    .title-page-subtitle {
        font-size: $font-size-default * 0.9;
        font-weight: normal;
        margin-top: 0;
        padding-top: 0;
        &:before {
            display: none;
        }
    }
}

.title-page {
    margin-top: $line-height-default * 15;
    .title-page-title {
        @include head-1();
    }
    .publisher-logo {
        width: $page-width;
        margin-inside: -($margin-inside);
        position: absolute;
        bottom: 0;
        img {
            width: $sidebar-text-width / 2;
        }
    }
}

// Copyright page

.copyright-page {
    // Center vertically
    position: relative; // overrides template's absolute bottom
    top: (($page-height - $margin-top - $margin-bottom) / 2);
    transform: translatey(-50%);
    // Center on page horizontally
    margin-outside: -($sidebar-text-width + $sidebar-margin-inside);
    padding: 0 $margin-inside;
    p {
        text-align: center;
        margin-bottom: $line-height-default / 2;
    }
    img {
        width: $sidebar-text-width / 2;
    }
}

// Contents page (TOC)

.contents-page {
    h1 {
        // reverse colours
        @include head-1-reverse();
        // remove border above heading text
        &:before {
            // content: normal;
            border: 0;
        }
    }
    .theme-legend {
        width: $page-width - ($margin-inside * 2); // same as .toc-list
        margin-top: 0;
        margin-inside: $line-height-default * 1.5;
        margin-outside: -($margin-outside - $margin-inside);
        margin-bottom: $line-height-default * 2;
        float: none;
        .theme-legend-heading {
            margin: 0 0 ($line-height-default * 0.5) 0;
            font-family: $font-display-main;
            font-weight: normal;
        }
        .theme-legend-list {
            columns: 3;
            li {
                text-transform: none;
                letter-spacing: $letter-spacing-text;
                font-family: $font-text-main;
                font-size: $font-size-default * $font-size-smaller;
                color: $color-text-main;
            }
        }
    }
    // Only the main toc-list
    #content > .toc-list {
        // center on page
        width: $page-width - ($margin-inside * 2);
        margin-outside: -($margin-outside - $margin-inside);
    }
    ul, ol {
        margin-bottom: $line-height-default / 2;
        li {
            font-family: $font-display-main;
            text-transform: uppercase;
            letter-spacing: 0.025em;
            color: $color-accent;
            hyphens: none;
            &.toc-entry-title {
                &.theme-17 {
                    color: $theme-17-color;
                }
                &.theme-18 {
                    color: $theme-18-color;
                }
                &.theme-19 {
                    color: $theme-19-color;
                }
                &.theme-20 {
                    color: $theme-20-color;
                }
                &.theme-21 {
                    color: $theme-21-color;
                }
                &.theme-22 {
                    color: $theme-22-color;
                }
            }
            .toc-entry-text {
                display: inline-block;
                text-indent: -($line-height-default);
                margin-left: $line-height-default * 2;
                // width of main (unit-level) headings
                max-width: $content-width * 0.8;
            }
            &.toc-frontmatter, &.toc-endmatter {
                margin-top: $line-height-default / 2;
                margin-bottom: $line-height-default / 2;
                margin-left: $line-height-default;
            }
            // Unit numbers
            strong:first-of-type {
                font-weight: inherit;
                display: inline-block;
                width: $line-height-default * 0.75; // allow 0.25 for width of space between number and text
            }
            a {
                &:after {
                    font-family: $font-text-main;
                    font-size: $font-size-default;
                    color: $color-text-main;
                }
            }
            ul, ol {
                margin-left: $line-height-default * 2;
                li {
                    font-family: $font-text-main;
                    text-transform: none;
                    letter-spacing: $letter-spacing-text;
                    color: $color-text-main;
                    .toc-entry-text {
                        display: inline-block;
                        text-indent: -($line-height-default * 1.25);
                        margin-left: $line-height-default * 2.5;
                        // width of subsection headings
                        max-width: $content-width * 0.75;
                    }
                    // Section numbers
                    strong:first-of-type {
                        font-weight: inherit;
                        display: inline-block;
                        width: $line-height-default * 1;
                    }
                }
            }
            // Inline theme keys in TOC
            .toc-theme-key {
                white-space: nowrap;
                .theme-key {
                    display: inline-block;
                    margin: 0;
                    // Each dot. Overrides inherited .theme-key styles.
                    span {
                        font-size: $font-size-default * 3;
                        margin-right: 2pt;
                        margin-bottom: -($line-height-default / 3);
                    }
                }
            }
        }
    }
}

// Preface

.valediction {
    font-style: italic;
}

// Contributors page

.contributors-page {}

// Chapter opening images

.chapter-opener-image {
    position: absolute;
    top: -($margin-top + 5mm); // 5mm set explicitly, not $bleed in case we're outputting without crops
    left: -($margin-inside + 5mm); // textarea margin, less bleed; assumes page is recto
    right: -($margin-outside + 5mm); // textarea margin, less bleed
    z-index: -2;
    overflow: hidden;
    height: $line-height-default * 23;
    // line-height: 80mm; // why did we set this?
    // Credit for the following vertical-centering method:
    // https://www.smashingmagazine.com/2013/08/absolute-horizontal-vertical-centering-css/
    img {
        margin: auto;
        position: absolute;
        top: 0; left: 0; bottom: 0; right: 0;
    }
}

// Chapter contributors
.contributors {
    // Position
    position: absolute;
    top: ($line-height-default * 22) - $margin-top; // 69mm;
    margin-outside: -($sidebar-text-width + $sidebar-margin-inside); // -60mm;
    // margin-top: -($line-height-default);
    // padding-bottom: $line-height-default;
    // Appearance
    text-indent: 0;
    font-family: $font-display-main;
    font-size: $font-size-default * 0.8; // 8pt;
    color: $color-mid;
    text-transform: uppercase;
    letter-spacing: 0.025em;
}

// Pullquotes
// Note: this inherits styles from template _sass

.pullquote {
    float: top;
    border-top: $border-width solid $color-accent;
    border-bottom: $border-width solid $color-accent;
    padding-top: ($line-height-default / 2 - $border-width); // -1pt allows for border top and bottom
    padding-bottom: ($line-height-default / 2 - $border-width); // -1pt allows for border top and bottom
    padding-left: 0;
    padding-right: 0;
    margin-top: 0;
    margin-bottom: $line-height-default;
    margin-outside: -($sidebar-margin-inside) - ($sidebar-text-width / 2);
    p {
        color: $color-accent;
        font-style: italic;
        font-size: $font-size-default * 1.8;
        line-height: $line-height-default * 2;
        text-align: left;
        padding: 0;
        margin: 0;
    }
    & + p {
        text-indent: $line-height-default;
    }
}







//  ███████╗██╗██████╗ ███████╗██████╗  █████╗ ██████╗ 
//  ██╔════╝██║██╔══██╗██╔════╝██╔══██╗██╔══██╗██╔══██╗
//  ███████╗██║██║  ██║█████╗  ██████╔╝███████║██████╔╝
//  ╚════██║██║██║  ██║██╔══╝  ██╔══██╗██╔══██║██╔══██╗
//  ███████║██║██████╔╝███████╗██████╔╝██║  ██║██║  ██║
//  ╚══════╝╚═╝╚═════╝ ╚══════╝╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
//                                                     

// Sidebar

@mixin sidebar() {
    // Getting sidenotes not to overlap depends on content-box and horizontal padding,
    // and clear: both. Override padding in other classes after including sidebar().
    // This seems to be because clear: both isn't working on its own.
    // The idea seems to be that the sidenote must be very slightly too big for the
    // available space, but not too big to push into the main text area.
    // So using horizontal padding, we make the sidenote 0.01pt too wide.
    box-sizing: content-box;
    // The .495pt (left and right) on each side = 0.99pt, allows for almost the $border-width border;
    // any more horiz padding and it pushes body text out; any less and sidenotes overlap
    padding: 0 ($sidebar-margin-inside / 2 - ($border-width / 2 - 0.005pt));
    clear: both;
    // clear: outside; // tested and does not work, we need to clear inside, too
    float: outside;
    width: $sidebar-text-width - $sidebar-margin-inside;
    margin-outside: -($sidebar-text-width + $sidebar-margin-inside);
    margin-inside: $sidebar-margin-inside; // touches the edge of the text, so boxes can't overlap
    margin-top: 0;
    margin-bottom: $line-height-default;
    max-width: none; // overrides inherited template .sidenote rules
    border-top: 0;
    border-right: $border-width solid white; // Keeps total width same when conjoined classes have a border
    border-bottom: 0;
    border-left: $border-width solid white; // Keeps total width same when conjoined classes have a border
    page-break-inside: avoid;
    // Correct for shift caused by parent blockquotes
    blockquote & {
        margin-outside: -($sidebar-text-width + $sidebar-margin-inside) - ($line-height-default / 2);
        margin-inside: ($sidebar-margin-inside) + ($line-height-default / 2);
    }
    // Let's allow auto hyphens here, given the narrow column
    // except in headings.
    // Actually, on second thought, manual hyphens is safer.
    // hyphens: auto;
    & h1, & h2, & h3, & h4, & h5, & h6 {
        hyphens: manual;
    }
    &.wide {
        width: ($content-width / 2);
        margin-top: $line-height-default / 2; // testing this
    }
    &.full-width {
        width: $content-width;
        margin-top: $line-height-default;
        float: bottom;
        columns: 2;
        column-gap: $grid-unit-width;
        margin-inside: 0;
        &.fixed {
            float: none;
            & + p {
                text-indent: 0;
            }
        }
    }
    &.text-width {
        width: $main-text-width;
        box-sizing: border-box; // fits this inside main text area, including padding and border
        margin-top: $line-height-default;
        float: bottom;
        margin-inside: 0;
        clear: none; // let other sidebar elements float beside
        &.fixed {
            float: none;
            & + p {
                text-indent: 0;
            }
        }
    }
}

.sidenote,
.footnote-detail {
    @include sidebar();
    width: ($sidebar-text-width - $sidebar-margin-inside) - ($border-width * 2); // $border-width from sidebar() border + $border-width to accommodate inside border created with :before background
    padding: 0 ($sidebar-margin-inside / 2 + 0.005pt);
    margin-outside: -($sidebar-text-width + $sidebar-margin-inside) - $border-width; // shift a little for faux border
    margin-inside: $sidebar-margin-inside + $border-width; // touches the edge of the text, so boxes can't overlap
    font-family: $font-text-secondary;
    font-size: $font-size-default * 0.8;
    color: $color-text-secondary;
    // Prince does not give us 'border-inside', only margin-inside.
    // (http://www.princexml.com/forum/topic/717/padding-inside-padding-outside)
    // Hence this workaround! We position this element relative
    // and give it a background color, then we put a pseudo element
    // with a solid background colour exactly behind it (position: absolute)
    // adjusting top and bottom for padding if necessary.
    // We need to put some invisible content in there to make it appear.
    // Finally, we shift it inside slightly exposing its edge as a 'border',
    // and hide the rest behind its parent with a negative z-index.
    // Written up at https://gist.github.com/arthurattwell/60f46206a95b4dc2e39dcc08b83b2c4f
    position: relative;
    background: white;
    &:before {
        position: absolute;
        top: $border-width; // ensures red background hides behind sidenote
        bottom: $border-width; // ensures red background hides behind sidenote
        left: 0;
        right: 0;
        background: $color-accent;
        display: block;
        content: "\2009"; // \2009 is a thin space
        margin-outside: $border-width; // hides red behind white
        margin-inside: -($border-width * 2); // this plus $border-width of margin-outside = width of $border-width 'border'
        z-index: -1;
    }
    p {
        text-indent: 0;
        margin-bottom: $line-height-default / 2;
    }
    ul, ol {
        margin-top: 0;
    }
    // Put the indent back on paras after floated sidenotes.
    & + p,
    & + & + p {
        text-indent: $line-height-default;
    }
    // Unless they follow headings, blockquotes or lists
    h1 + & + p, h2 + & + p, h3 + & + p, h4 + & + p, h5 + & + p, h6 + & + p,
    h1 + & + & + p, h2 + & + & + p, h3 + & + & + p, h4 + & + & + p, h5 + & + & + p, h6 + & + & + p,
    blockquote + & + p,
    blockquote + & + & + p,
    ol + & + p,
    ol + & + & + p,
    ul + & + p,
    ul + & + & + p {
        text-indent: 0;
    }
    & > *:last-child {
        margin-bottom: 0;
    }
    // Sidenotes straight after sidenotes
    & + & {
        // margin-top: -($line-height-default); // saving space by removing gap between successive sidenotes
        // Bad idea, leaving it here so I don't make this mistake again. Successive sidenotes at the tops
        // of pages end up higher than the text area, because of the negative top margin.
    }
    // Footnotes inside sidenotes
    .footnote-detail {
        width: ($sidebar-text-width - $sidebar-margin-inside) - ($border-width * 3); // `* 3` because we have to move this outside by an extra $border-width to align with parent
        float: none;
        padding-top: 0;
        padding-bottom: 0;
        margin-top: $line-height-default;
        margin-inside: -($sidebar-margin-inside / 2) - ($border-width / 2 - 0.005pt); // adjustment: no need for faux border adjustment
        margin-outside: -($sidebar-margin-inside / 2) - ($border-width / 2 - 0.005pt); // adjustment: no need for faux border adjustment
        // Remove faux border, because parent note provides one
        &:after {
            background-color: transparent;
        }
        // No margin below the last footnote
        &:last-child {
            margin-bottom: 0;
        }
    }
    // Wide sidenotes
    &.wide {
        width: ($content-width / 2) - ($border-width * 2);
        // Footnotes inside wide sidenotes
        .footnote-detail {
            width: ($content-width / 2) - ($border-width * 2);
        }
    }
}
// footnote-detail is always above (i.e. floated beside) the para
// it relates to, once footnotes_pdf.js has run. So we don't want
// a page break after them, or they might separate from their paras.
.footnote-detail {
    page-break-after: avoid;
}

// Plain blockquotes in main text have special needs.
// The attribute selector here means this will not apply to blockquotes
// used for things like .sidenote and .box etc.
// Here, we want to align footnotes in blockquotes, and prevent them
// overlapping with earlier sidebar elements.
// We have to add some variations on class attributes, because the attribute selector is very strict.
#content > blockquote[class=" contains-footnote"],
#content > blockquote[class="keep-with-next contains-footnote"] {
    padding-left: 0; // override the usual way of indenting blockquotes with padding
    padding-right: 0;
    & > p, & > ul, & > ol {
        width: $main-text-width - ($line-height-default * 2); // instead, we set the width of the para content...
        margin-left: $line-height-default * 2; // ...shift it right, so sidebar elements touch it and get out the way, then...
        transform: translatex(-($line-height-default)); //...shift it back again visually.
        // Amazingly, this works for both left and right pages.
    }
    // When plain blockquotes contain footnotes in .footnote-detail,
    // those footnotes need to be shifted outwards by the amount of
    // the blockquote's padding in order to align with sidenotes.
    .footnote-detail {
        margin-outside: -($sidebar-text-width + $sidebar-margin-inside) - $border-width; // shift a little for faux border
        // don't set margin-inside here, to avoid pushing main text in on left-hand pages
    }
}

// Define a mixin for all box-like elements that contain footnotes
@mixin box-contains-footnote() {
    &.contains-footnote {
        padding-left: 0; // override the usual way of indenting blockquotes with padding
        padding-right: 0;
        > h3, > h4, > h5, > h6, > p, > ol, > ul {
            width: $main-text-width - $line-height-default; // instead, we set the width of the para content...
            margin-left: $line-height-default; // ...shift it right, so sidebar elements touch it and get out the way, then...
            transform: translatex(-($line-height-default * 0.5)); //...shift it back again visually.
        }
        .footnote-detail {
            width: $sidebar-text-width - $sidebar-margin-inside - $border-width;
            margin-outside: -($sidebar-text-width + $sidebar-margin-inside) - $border-width; // shift a little for faux border
            margin-inside: $sidebar-margin-inside; // aligns text with other sidebar elements; prevents right-hand-page sidenotes form pushing main text in
        }
        // Put sidenotes back in place after change in indentation mechanism
        .sidenote {
            margin-outside: -($sidebar-text-width + $sidebar-margin-inside) - ($line-height-default);
            margin-inside: $sidebar-margin-inside;
            width: ($sidebar-text-width - $sidebar-margin-inside) - ($border-width * 2); // because we set width on > p above
            transform: none; // for p.sidenote
            padding: 0 ($line-height-default * 1.5); // for p.sidenote which doesn't inherit this
            &.wide {
                width: ($content-width / 2) - ($border-width * 2);
            }
        }
        blockquote {
            // rebuild the padding on plain blockquotes after all that surgery
            padding: 0 ($line-height-default * 1.5);
        }
        // Put figures back, too
        .figure {
            transform: translatex($line-height-default * 0.5);
        }
        // Legacy blockquote-based figures
        blockquote.figure {
            padding-left: $line-height-default / 2;
            padding-right: $line-height-default / 2;
        }
        // Put definitions back in place after change in indentation mechanism
        .definition {
            margin-outside: -($sidebar-text-width + $sidebar-margin-inside);
            margin-inside: $sidebar-margin-inside;
        }
    }
    // Plain blockquotes with footnotes inside box elements
    & > blockquote[class=" contains-footnote"] {
        padding-left: 0; // override the usual way of indenting blockquotes with padding
        padding-right: 0;
        & > h4, & > h5, & > h6, & > p, & > ul, & > ol {
            width: $main-text-width - ($line-height-default * 3); // instead, we set the width of the para content...
            margin-left: $line-height-default * 3.5; // ...shift it right, so sidebar elements touch it and get out the way, then...
            transform: translatex(-($line-height-default * 2)); //...shift it back again visually.
            // And then to fix position on left-hand pages:
            margin-outside: ($line-height-default * 3);
        }
        // When plain blockquotes contain footnotes in .footnote-detail,
        // those footnotes need to be shifted outwards by the amount of
        // the blockquote's padding in order to align with sidenotes.
        .footnote-detail {
            width: ($sidebar-text-width - $sidebar-margin-inside) - ($border-width * 2); // same as inherited
            // Note we do this margin-right, not outside, because we're treating left and right pages differently in here
            margin-right: -($sidebar-text-width + $sidebar-margin-inside) - $border-width; // closer to text than inherited

            // desperate measures: in the event our code to prevent sidenotes from before .economist
            // boxes from overlapping sidenotes inside them fails, hide them completely.
            // This is less bad than inadvertently causing overlap that isn't immediately visible.
            // For instance, we know that on left-hand pages, we can get this overlap.
            z-index: -10;
        }
    }
}







//   ██████╗ █████╗ ██████╗ ███████╗████████╗ ██████╗ ███╗   ██╗███████╗███████╗
//  ██╔════╝██╔══██╗██╔══██╗██╔════╝╚══██╔══╝██╔═══██╗████╗  ██║██╔════╝██╔════╝
//  ██║     ███████║██████╔╝███████╗   ██║   ██║   ██║██╔██╗ ██║█████╗  ███████╗
//  ██║     ██╔══██║██╔═══╝ ╚════██║   ██║   ██║   ██║██║╚██╗██║██╔══╝  ╚════██║
//  ╚██████╗██║  ██║██║     ███████║   ██║   ╚██████╔╝██║ ╚████║███████╗███████║
//   ╚═════╝╚═╝  ╚═╝╚═╝     ╚══════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═══╝╚══════╝╚══════╝

// Capstone legends

@mixin theme-marker($color) {
    font-family: $font-text-main;
    content: "\2022";
    font-size: $font-size-default * 4.4; // 44pt; // defines the size of the bullet, which varies per font
    color: $color;
    display: inline-block;
    line-height: $line-height-default;
}

.theme-legend {
    @include sidebar();
    width: $sidebar-text-width + $sidebar-margin-inside - $sidebar-margin-inside; // 55mm;
    font-family: $font-text-secondary;
    font-size: $font-size-default * 0.7; // 7pt;
    line-height: $line-height-default;
    margin-top: $line-height-default * 1; // Adjust to align with baseline of text area, after sidenote top padding
    .theme-legend-heading {
        font-weight: bold;
        text-transform: uppercase;
        letter-spacing: 0.01em;
        margin: 0 0 0 ($line-height-default * 2);
    }
    .theme-legend-list {
        list-style: none;
        margin: 0;
        li {
            display: block;
            padding: 0 0 0 ($line-height-default); // Adjust 4pt/1.4mm for bullet's character width and 2.5 mm for sidebar padding;
            line-height: $line-height-default;
            &:before {
                display: block;
                float: left;
                margin-left: -($line-height-default * 1.5);
                line-height: $line-height-default;
                vertical-align: top;
                margin-top: 1pt; // this varies from font to font
            }
        }
    }
    // When given as an example, the legend must be in the running text area
    &.theme-legend-example {
        float: none;
        margin-outside: 0;
    }
}

// Don't show the SVG circles, which are in the HTML for web display only
.theme-legend-theme {
    svg {
        display: none;
    }
}

.theme-legend-theme-17 {
    &:before {
        @include theme-marker($theme-17-color);
    }
}
.theme-legend-theme-18 {
    &:before {
        @include theme-marker($theme-18-color);
    }
}
.theme-legend-theme-19 {
    &:before {
        @include theme-marker($theme-19-color);
    }
}
.theme-legend-theme-20 {
    &:before {
        @include theme-marker($theme-20-color);
    }
}
.theme-legend-theme-21 {
    &:before {
        @include theme-marker($theme-21-color);
    }
}
.theme-legend-theme-22 {
    &:before {
        @include theme-marker($theme-22-color);
    }
}

// Capstone keys

.theme-key {
    line-height: 0;
    letter-spacing: -0.4em;
    margin: $line-height-default 0 0 -1.4mm; // magic number for these bullets in this font
    text-indent: 0;
    page-break-after: avoid;
    // Remove space between the key and the element it precedes.
    & + * {
        margin-top: 0;
    }
    // No space above when following certain elements
    h1 + &,
    h1 + .theme-legend + & {
        margin-top: 0;
    }
    &.page-break-before {
        // page-break-before: always; // inherited already, just noted here for clarity
        margin-top: 0; // because it's the top of the page
    }
}

.theme-key-17 {
    @include theme-marker($theme-17-color);
}
.theme-key-18 {
    @include theme-marker($theme-18-color);
}
.theme-key-19 {
    @include theme-marker($theme-19-color);
}
.theme-key-20 {
    @include theme-marker($theme-20-color);
}
.theme-key-21 {
    @include theme-marker($theme-21-color);
}
.theme-key-22 {
    @include theme-marker($theme-22-color);
}

// Capstone chapter feature colours

@mixin capstone-color-overrides($color, $color-hex-chars) {
    // background color
    h1 {
        // we use color-code because the # doesn't work in a src url
        background-image: url("../images/pinch-top-#{$color-hex-chars}.svg"), url("../images/pinch-bottom-#{$color-hex-chars}.svg");
        &:after {
            background-color: $color;
        }
    }
    // h2, h3 color
    h2, h3, .subheadline {
        color: $color;
    }
    // definition background
    .definition {
        background-color: $color;
    }
    // faux border on sidenote and footnote-detail
    .sidenote, .footnote-detail {
        &:before {
            background-color: $color;
        }
    }
    // h3:strong background
    .einstein, .great-economist, .great-economists, .economist, .economists, .find-out-more {
        h3 strong:first-of-type {
            background-color: $color;
        }
        .sidenote, .footnote-detail {
            &:before {
                background-color: white;
            }
        }
    }
    // background shade
    .mcq, .question {
        background-color: tint($color, 85%);
    }
    // border
    .exercise, .info, .box {
        border-color: $color;
    }
    // color of headings in exercises in the sidebar
    .exercise.pdf-sidebar {
        h2, h3, h4, h5, h6 {
            color: $color;
        }
    }
    // font color in info boxes
    .info {
        color: $color;
    }
    .slides {
        .figure {
            .title {
                color: $color;
            }
        }
    } // titles
}

// Load the overrides and define the @page names,
// which we'll use later for headers and footers
body.theme-17 {
    @include capstone-color-overrides($theme-17-color, $theme-17-color-hex-chars);
    page: theme-17;
}
body.theme-18 {
    @include capstone-color-overrides($theme-18-color, $theme-18-color-hex-chars);
    page: theme-18;
}
body.theme-19 {
    @include capstone-color-overrides($theme-19-color, $theme-19-color-hex-chars);
    page: theme-19;
}
body.theme-20 {
    @include capstone-color-overrides($theme-20-color, $theme-20-color-hex-chars);
    page: theme-20;
}
body.theme-21 {
    @include capstone-color-overrides($theme-21-color, $theme-21-color-hex-chars);
    page: theme-21;
}
body.theme-22 {
    @include capstone-color-overrides($theme-22-color, $theme-22-color-hex-chars);
    page: theme-22;
}

// Also see @page overrides for themes in headers and footers section below.





//  ███████╗██╗ ██████╗ ██╗   ██╗██████╗ ███████╗███████╗
//  ██╔════╝██║██╔════╝ ██║   ██║██╔══██╗██╔════╝██╔════╝
//  █████╗  ██║██║  ███╗██║   ██║██████╔╝█████╗  ███████╗
//  ██╔══╝  ██║██║   ██║██║   ██║██╔══██╗██╔══╝  ╚════██║
//  ██║     ██║╚██████╔╝╚██████╔╝██║  ██║███████╗███████║
//  ╚═╝     ╚═╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚══════╝╚══════╝
                                             

// Figures

@mixin figure-text() {
        font-family: $font-text-secondary;
        font-size: $font-size-default * 0.8; // 8pt;
        font-style: normal;
        line-height: $line-height-default;
        text-align: left;
        padding: 0;
        margin: 0;
        em {
            font-style: italic;
        }
}

.figure {
    clear: none; // lets sidebar elements from preceding elements flow beside this one
    float: bottom; // overrides template, which floats top always
    margin-bottom: 0;
    margin-top: $line-height-default * 2;
    // max-width: $page-width - $margin-outside - $margin-inside;
    max-width: none; // required to override template, and for source in sidebar
    h1, h2, h3, h4, h5, h6 {
        text-align: center;
    }
    p {
        clear: none; // overrides inherited template styles
    }
    .figure-body {
        float: inside;
        width: $main-text-width;
    }
    .figure-images {
        a.figure-image-link {
            // don't let the link take up space
            display: block;
            line-height: 0;
        }
        // If there is no reference or caption, figure-images is the only child
        // of .figure. In that case, we don't need its margin-bottom.
        &:only-child {
            margin-bottom: 0;
        }
    }
    .figure-html,
    .figure-md {
        @include figure-text();
        margin-bottom: $line-height-default;
        // Tables normally have space above. But if they are the first
        // thing in a figure, they must not have this space.
        &:first-child {
            table:first-of-type {
                margin-top: 0;
            }
        }
    }
    .title {
        @include figure-text();
        text-align: center;
        font-weight: bold;
        margin-bottom: $line-height-default;
    }
    .description {
        @include figure-text();
        text-align: center;
        margin-bottom: $line-height-default;
        hyphens: $hyphenation;
    }
    .caption {
        @include figure-text();
        text-align: left !important; // need !important; don't know what's got precedence over this
        page-break-before: avoid;
        .figure-reference {
            font-weight: bold;
        }
    }
    .figure-source {
        width: $sidebar-text-width;
        float: outside;
        margin-outside: -($sidebar-text-width + $sidebar-margin-inside);
        .source {
            font-family: $font-text-secondary;
            font-style: normal;
            font-size: $font-size-default * 0.7; // 7pt;
            display: inline-block;
            margin: 0;
            padding: 0 ($sidebar-margin-inside / 2); // necessary for alignment, probably overriding padding inherited from template
            line-height: $line-height-default * 9/12; // 9pt;
            color: $color-mid;
            text-align: left !important; // !important to override precedence of inherited styles :(
            hyphens: $hyphenation;
            // If source comes before caption in HTML, float into margins:
            // margin: 0; // reset margin inherited from template
            // margin-top: 7pt; // align with top of caption
            // margin-outside: -57mm; // to align with slideline text, often appearing below this
            // float: outside;
            // width: 50mm;
            // If source is after caption in HTML (better flow):
            // see alternative figure-as-table CSS below.
            em {
                font-style: italic;
            }
        }
    }
    img {
        // margin-bottom: $line-height-default; // figure-images already gets space below
    }
    // Wide figures
    &.wide {
        // We have to make this stretch from the right to left content margins.
        max-width: none;
        width: $content-width;
        margin-outside: -($sidebar-text-width + $sidebar-margin-inside);
        margin-inside: 0;
        table {
            // width: auto; // this leaves some tables too narrow, esp weird on left-hand pages
            width: 100%; // this is less bad for short tables than auto
        }
        .figure-body {
            width: $content-width;
            .caption {
                width: $main-text-width;
                margin-outside: $sidebar-text-width + $sidebar-margin-inside;
            }
        }
        // Put the source under the figure caption
        .figure-source {
            width: $main-text-width;
            margin-outside: $sidebar-text-width + $sidebar-margin-inside;
            float: none;
            .source {
                padding: 0;
            }
        }
        // override inherited width
        &.figure-no-source {
            width: $content-width;
        }
    }
    // If a figure has no source, we don't need to occupy the sidebar
    &.figure-no-source {
        width: $main-text-width;
    }
    // We can deliberately hide the source (e.g. if it's repeated),
    // in which case we also don't need to occupy the sidebar area.
    &.hide-source {
        width: $main-text-width;
        .figure-source {
            display: none;
        }
    }
    &.thumbnail {
        @include sidebar();
        &.figure-no-source {
            width: $sidebar-text-width - $sidebar-margin-inside;
        }
        .figure-body {
            width: 100%;
        }
        .figure-source {
            width: 100%;
            float: none;
            margin: 0;
            .source {
                display: block;
                float: none;
                margin: 0;
                padding: 0;
            }
        }
    }
    &.fixed {
        // For some reason we have to apply this space after to the figure-body to work in Prince
        width: $main-text-width - $border-width - 0.01pt; // necessary to let sidenotes flow beside this figure
        clear: none; // necessary to let sidenotes flow beside this figure
        float: inside; // necessary to let sidenotes flow beside this figure
        .figure-body {
            width: $main-text-width - $border-width - 0.01pt; // necessary to let sidenotes flow beside this figure
            margin-bottom: $line-height-default;
        }
        // Fixed, wide figures 
        &.wide {
            width: $content-width;
            .figure-body {
                width: 100%;
            }
        }
    }
    // Figures floated deliberately to the top of the page
    &.float-top,
    &.float-top-next {
        margin-bottom: $line-height-default * 2;
        margin-top: 0;
    }
}
// No indent on paras that follow figures that follow headings or lists
h1, h2, h3, h4, h5, h6,
.subheadline, ol, ul {
    & + .figure + p {
        text-indent: 0;
    }
}

// When figure captions are used outside of a .figure,
// e.g. after a table
.caption,
.figure-caption {
    @include figure-text();
    page-break-before: avoid;
    margin-bottom: $line-height-default;
}

// Figures with multiple images
.figure {
    .figure-images {
        text-align: center;
        &.contains-2, &.contains-4, &.contains-8, &.contains-10 {
            img {
                max-width: ($main-text-width / 2) - 3mm;
                padding: 1mm;
            }
        }
        &.contains-3, &.contains-6, &.contains-9 {
            img {
                max-width: ($main-text-width / 3) - 3mm;
                padding: 1mm;
            }
        }
        &.contains-5 {
            img {
                max-width: ($main-text-width / 3) - 3mm;
                padding: 1mm;
            }
            img:nth-last-child(1), img:nth-last-child(2) {
                max-width: ($main-text-width / 2) - 3mm;
            }
        }
        &.contains-7 {
            img {
                max-width: ($main-text-width / 2) - 3mm;
                padding: 1mm;
            }
            img:nth-last-child(3),
            img:nth-last-child(2),
            img:nth-last-child(1) {
                max-width: ($main-text-width / 3);
            }
        }
    }
    // Let users specify a class for the figure
    // that controls how multi-image figures are laid out:
    // two large images
    &.image-rows-1-1 {
        .figure-images {
            &.contains-2 {
                img {
                    width: $main-text-width;
                    max-width: none;
                }
            }
        }
    }
    // one large, then two small...
    &.image-rows-1-2 {
        .figure-images {
            &.contains-3 {
                img {
                    max-width: ($main-text-width / 2) - 3mm;
                }
                img:nth-of-type(1) {
                    max-width: ($main-text-width) - 3mm;
                }
            }
        }
    }
    // ...two small, then one large
    &.image-rows-2-1 {
        .figure-images {
            &.contains-3 {
                img {
                    max-width: ($main-text-width / 2) - 3mm;
                }
                img:nth-of-type(3) {
                    max-width: ($main-text-width) - 3mm;
                }
            }
        }
    }
    // All images full width
    &.image-rows-1-1-1 {
        .figure-images {
            &.contains-3 {
                img {
                    width: $main-text-width;
                    max-width: none;
                }
            }
        }
    }
}

// Don't show titles and descriptions by default.
// We'll show these later, in .slides
.figure {
    .title, .description {
        display: none;
    }
}








//  ███████╗██╗     ██╗██████╗ ███████╗███████╗
//  ██╔════╝██║     ██║██╔══██╗██╔════╝██╔════╝
//  ███████╗██║     ██║██║  ██║█████╗  ███████╗
//  ╚════██║██║     ██║██║  ██║██╔══╝  ╚════██║
//  ███████║███████╗██║██████╔╝███████╗███████║
//  ╚══════╝╚══════╝╚═╝╚═════╝ ╚══════╝╚══════╝

// Slides sections

.slides {
    float: bottom;
    margin-top: $line-height-default;
    margin-bottom: $line-height-default;
    margin-outside: -($sidebar-text-width + $sidebar-margin-inside); // -60mm;
    margin-inside: 0;
    column-count: 3;
    column-gap: $grid-unit-width;
    column-fill: balance; // default anyway, but making it explicit here
    widows: 1; // ensures a column balance when containing only three slides
    orphans: 1; // ensures a column balance when containing only three slides
    .figure {
        float: none; // don't float like normal figures, all of .slides floats instead
        display: inline-block;
        width: $sidebar-text-width;
        padding: 0;
        margin: 0;
        border: 0;
        vertical-align: top;
        counter-increment: slide; // for numbering slides
        // When there are only two slides (a summary and two figures)
        // we shift those inside to avoid the empty third column.
        // This CSS selects the second and third of three siblings.
        &:nth-child(2):nth-last-child(2),
        &:nth-child(3):nth-last-child(1) {
            margin-outside: $sidebar-text-width + $sidebar-margin-inside;
        }
        // When there are four slides, there is a chance they fall into
        // the first two columns, leaving the third blank. We can only
        // control for this manually, adding a `column-break-after` class
        // to one of the figures in .slides.
        &.column-break-after {
            display: block;
            column-break-after: always;
        }
        // same thing, but after
        &.column-break-before {
            display: block;
            column-break-before: always;
        }
        .figure-body {
            width: $sidebar-text-width;
            float: none;
        }
        .figure-images {
            display: none;
        }
        .figure-html {
            display: none;
        }
        .figure-md {
            display: none;
        }
        .title {
            display: block;
            margin-bottom: 0;
            text-align: left;
            color: $color-accent;
            &:before {
                content: counter(slide, decimal) ". ";
            }
        }
        .caption {
            display: none;
        }
        .description {
            display: block;
            text-align: left;
        }
        .figure-source {
            display: none;
            .source {
                display: none;
            }
        }
        // Show full summary figure in pdf output
        &.summary {
            column-span: all;
            display: block;
            // margin-outside: $sidebar-text-width;
            // margin-bottom: $line-height-default / 2;
            margin-outside: $sidebar-text-width + $sidebar-margin-inside; // 60mm;
            margin-bottom: $line-height-default;
            width: $main-text-width;
            counter-reset: slide -1; // we do not number the summary figure, only subsequent figures in .slides
            .figure-body {
                width: $main-text-width;
                float: inside;
            }
            .figure-images {
                display: block;
            }
            .figure-html {
                display: block;
            }
            .figure-md {
                display: block;
            }
            .title {
                display: none;
            }
            .caption {
                display: block;
            }
            .description {
                display: none;
            }
            .figure-source {
                width: $sidebar-text-width;
                float: outside;
                margin-outside: -($sidebar-text-width + $sidebar-margin-inside);
                display: inline-block;
                .source {
                    // display: block;
                    display: inline-block;
                }
            }
            &:after {
                content: "";
                display: block;
                clear: both;
            }
        }
        &.wide {
            width: $content-width;
            margin-outside: 0;
            .figure-body {
                width: $content-width;
            }
            .figure-source {
                width: $main-text-width;
                margin-outside: $sidebar-text-width + $sidebar-margin-inside;
                float: none;
            }
        }
    }
    // Allow manual positioning in sidebar
    &.pdf-sidebar {
        @include sidebar();
        margin-top: 0;
        margin-bottom: $line-height-default;
        columns: 1;
        .figure {
            padding: 0;
        }
    }
}








//  ███████╗██╗  ██╗███████╗██████╗  ██████╗██╗███████╗███████╗███████╗
//  ██╔════╝╚██╗██╔╝██╔════╝██╔══██╗██╔════╝██║██╔════╝██╔════╝██╔════╝
//  █████╗   ╚███╔╝ █████╗  ██████╔╝██║     ██║███████╗█████╗  ███████╗
//  ██╔══╝   ██╔██╗ ██╔══╝  ██╔══██╗██║     ██║╚════██║██╔══╝  ╚════██║
//  ███████╗██╔╝ ██╗███████╗██║  ██║╚██████╗██║███████║███████╗███████║
//  ╚══════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝ ╚═════╝╚═╝╚══════╝╚══════╝╚══════╝


.exercise {
    font-family: $font-text-secondary;
    font-size: $font-size-default * 0.85; // 8.5pt;
    padding: $line-height-default / 2;
    margin: $line-height-default 0;
    border: $border-width solid $color-accent;
    border-bottom-right-radius: $core-element-border-radius;
    page-break-inside: avoid;
    clear: inside; // experimental, avoids fixed figures overlapping with exercise
    // NOTE:
    // display: inline-block; // would expand box to height of floated elements, like figures, but...
    // that doesn't let sidebar elements float beside it.
    // overflow: hidden; // this also expands box to height of floated elements, like figures, but...
    // it also expands its height to match the position of floated elements, which might have been
    // pushed down in the sidebar, resulting in an .exercise box being too high, filled with white space.
    // See clearfix-like solution for figures in exercise boxes below.
    h2, h3, h4, h5, h6 {
        font-family: $font-text-secondary;
        font-size: $font-size-default * 0.85; // 8.5pt;
        font-style: normal;
        text-transform: uppercase;
        font-weight: bold;
        letter-spacing: 0.01em;
        margin: 0;
    }
    // If heading is mid-exercise (e.g. a second exercise)
    // add space before the heading.
    * + h2, * + h3, * + h4, * + h5, * + h6 {
        margin-top: $line-height-default;
    }
    // no space above lists that follow exercise headings
    h3 + ol, h3 + ul {
        margin-top: 0;
    }
    // no space above nested lists
    ul, ol {
        ul, ol {
            margin-top: 0;
        }
    }
    img {
        max-width: $main-text-width - $line-height-default; // fit inside box padding
    }
    p {
        // Images in kramdown are wrapped in a p. This selects those images, so that
        // we can override the text indent on paragraphs that follow other paragraphs,
        // and apply other spacing improvements.
        & + p > img:only-child {
            margin-top: $line-height-default;
            margin-left: -$line-height-default;
        }
    }
    // Tables
    table {
        width: $main-text-width - $line-height-default - 0.1pt; // lets sidenotes float alongside
        max-width: $main-text-width - $line-height-default - 0.1pt; // lets sidenotes float alongside
    }
    // Space after paragraphs and lists in these elements
    // No space after last element.
    // Parent padding takes care of this.
    & > *:last-child {
        margin-bottom: 0;
    }
    .figure {
        width: $main-text-width - $line-height-default - ($border-width * 2) - 0.1pt; // the -0.1pt is to let sidebar elements, which are made too wide to avoid overlapping, not push the figure down
        .figure-body {
            width: $main-text-width - $line-height-default - ($border-width * 2) - 0.1pt; // the -0.1pt is to let sidebar elements, which are made too wide to avoid overlapping, not push the figure down
            margin-bottom: $line-height-default; // adds space where these figures are not normally floated
        }
        .figure-source {
            margin-outside: -($sidebar-text-width + $sidebar-margin-inside) - ($line-height-default / 2); // accounts for narrower figure-body
        }
        &.figure-no-source {
            width: $main-text-width - $line-height-default - ($border-width * 2) - 0.1pt;
            display: inline-block; // required to let sidebar elements float beside
        }
        // a clearfix-like solution for exercise boxes not expanding to height of figure 
        // when figure is last the element in an exercise box
        &:last-child:after {
            content: " "; // needs some content to take up space
            display: block; // needs this, perhaps to fill width
            clear: both; // must clear its parent's float
            margin-bottom: -($line-height-default); // remove space normally added after last element in exercise
        }
        // Lists after figures don't need margin-top, because the figure has margin-bottom
        & + ol, & + ul {
            margin-top: 0;
        }
    }
    &.contains-figures {
        // If an exercise contains figures, its height can collapse,
        // leaving figures outside its borders. By adding this class
        // to the exercise, we float the entire figure, which forces it
        // to expand to its children's height. We also don't float the
        // figures, in order to keep them inside the exercise's borders.
        float: inside;
        .figure {
            float: none;
        }
    }
    .slides {
        margin: $line-height-default 0;
        .figure {
            margin: 0;
            width: (($main-text-width - $line-height-default * 1.5) / 2); // allows for padding on parent box
            .figure-body {
                width: (($main-text-width - $line-height-default * 1.5) / 2); // allows for padding on parent box
            }
            .figure-source {
                display: none;
            }
            &.summary {
                float: none;
                width: ($main-text-width + $sidebar-text-width + $sidebar-margin-inside) - $line-height-default;
                margin-outside: -($sidebar-text-width + $sidebar-margin-inside); // -60mm;
                margin-inside: 0;
                &.figure-no-source {
                    width: $main-text-width - ($line-height-default) - 1.1pt; // the -1.1pt is min required to let sidebar elements, which are made too wide to avoid overlapping, not push the figure down
                    display: inline-block; // required to let sidebar elements float beside
                    margin-outside: 0; // nothing in sidebar
                    display: block; // only way to prevent slides from floating over the summary
                }
                // Clear the float before slides begin
                &:after {
                    content: "";
                    display: block;
                    clear: both;
                }
                .figure-body {
                    float: inside;
                    width: ($main-text-width) - ($line-height-default);
                    margin: 0;
                }
                .figure-source {
                    width: $sidebar-text-width;
                    display: inline-block; // reverses display: none
                    float: outside;
                    margin-outside: 0;
                    .source {
                        width: $sidebar-text-width;
                        display: inline-block; // reverses display: none
                        padding: 0;
                    }
                }
            }
        }
    }
    // Allow manual positioning in sidebar
    &.pdf-sidebar {
        @include sidebar();
        border: $border-width solid $color-accent;
        border-bottom-right-radius: $core-element-border-radius;
        padding-top: ($line-height-default / 2) - $border-width; // the $border-width is for the border
        padding-bottom: ($line-height-default / 2) - $border-width; // the $border-width is for the border
        width: $sidebar-text-width - $sidebar-margin-inside - ($border-width - 0.01pt); // -0.99pt keeps box aligned with sidenotes, but 0.001 shy of perfect, to ensure no overlapping
        font-family: $font-text-secondary;
        font-size: $font-size-default * 0.8; // 8pt;
        color: $color-text-main;
        h2, h3, h4, h5, h6 {
            font-family: $font-text-secondary;
            font-size: $font-size-default * 0.8; // 8pt;
            font-style: normal;
            color: $color-accent;
            text-transform: uppercase;
            font-weight: bold;
            letter-spacing: 0.01em;
            margin: 0;
        }
        // Space after paragraphs and lists in these elements
        p, ul, ol {
            margin-bottom: $line-height-default;
            text-indent: 0;
            // But no space between paras and lists, or lists and nested lists
            + ul, + ol {
                margin-top: -($line-height-default);
            }
        }
        // No space after last element.
        // Parent padding takes care of this.
        & > *:last-child {
            margin-bottom: 0;
        }
        blockquote {
            margin: 0;
        }
        // When pdf-sidebar floats an exercise out of the main text area
        // put the text-indent back on the following paragraph.
        + p {
            text-indent: $line-height-default;
        }
        // unless it follows a list, in which case we don't indent the para
        ul + & + p {
            text-indent: 0;
        }
        // Inline images, which in kramdown are always the only child of their parent paragraph
        img {
            max-width: $sidebar-text-width - $sidebar-margin-inside - $line-height-default;
        }
    }
    &.full-width, &.wide {
        box-sizing: border-box; // gets $content-width correct, given padding on this element
        width: $content-width;
        columns: 2;
        column-gap: $grid-unit-width;
        margin-outside: -($sidebar-margin-inside + $sidebar-text-width);
        table {
            width: 100%; // should only fill column width
        }
        .sidenote, .footnote-detail {
            float: column-bottom-corner;
            width: (($content-width - ($line-height-default * 2)) / 2) - ($line-height-default / 2) - $border-width;
            padding: 0 0 0 ($line-height-default / 2);
            margin: 0 0 $line-height-default 0;
            border-left: $border-width solid $color-accent;
        }
        .figure {
            float: none;
            display: block;
            column-span: all;
            width: auto;
            margin-top: $line-height-default;
            .figure-body {
                width: auto;
            }
            .figure-images {
                background-color: white;
                width: $content-width - $line-height-default;
                // Multi-image figures need a different max-wdith
                &.contains-2, &.contains-4, &.contains-8, &.contains-10 {
                    img {
                        max-width: ($content-width / 2) - ($line-height-default * 1.5) - ($border-width * 2);
                    }
                }
            }
            .caption {
                width: $main-text-width;
                margin-left: auto;
                margin-right: auto;
            }
            // Wide figures in wide exercises.
            &.wide {
                width: $content-width - ($line-height-default * 2);
                margin-outside: 0;
                .figure-body {
                    width: $content-width - ($line-height-default * 2);
                    .caption {
                        width: $main-text-width;
                        margin-outside: $sidebar-text-width + $sidebar-margin-inside;
                    }
                }
                // Put the source under the figure caption
                .figure-source {
                    width: $main-text-width;
                    margin-outside: $sidebar-text-width + $sidebar-margin-inside;
                    margin-bottom: $line-height-default;
                    float: none;
                    .source {
                        padding: 0;
                    }
                }
                // override inherited width
                // TODO: shouldn't this be $content-width - ($line-height-default * 2)
                &.figure-no-source {
                    width: $content-width;
                }
                // In a wide exercise, if a wide figure has no caption or reference, 
                // but it does have a source, remove a line space above the source
                &.figure-no-caption:not(.figure-no-source) {
                    .figure-body {
                        margin-bottom: 0;
                    }
                }
            }
            // A one wide, two small figure layout in a wide exercise
            &.image-rows-1-2 {
                .figure-images {
                    &.contains-3 {
                        img:nth-of-type(2),
                        img:nth-of-type(3) {
                            max-width: ($content-width / 2) - ($line-height-default * 1) - ($border-width * 2);
                        }
                    }
                }
            }
        }
        // Interaction of lists with figures
        // Lists have a line-space after, and figures have a line space before.
        // When a list is followed by a figure, remove the figure's margin-top.
        ol, ul {
            & + .figure {
                margin-top: 0;
            }
        }
        .column-break-before {
            column-break-before: always;
        }
    }
    // Sidenotes in exercise boxes
    .sidenote, .footnote-detail {
        @include sidebar();
        // shift this note further outside to make up for padding on parent .box
        // we'll remove the faux border, so we need to add an extra $border-width for alignment.
        margin-outside: -($sidebar-text-width + $sidebar-margin-inside + ($sidebar-margin-inside / 2)) - $border-width;
        margin-inside: $sidebar-margin-inside + ($line-height-default / 2);
        &:before {
            background: transparent; // remove 'border' from sidenotes in boxes
        }
    }
    // Videos in exercise boxes
    .video {
        margin-outside: -($sidebar-text-width + $sidebar-margin-inside + ($sidebar-margin-inside / 2));
        margin-inside: $sidebar-margin-inside + ($line-height-default / 2);
    }
}







//  ██╗███╗   ██╗███████╗ ██████╗     ██████╗  ██████╗ ██╗  ██╗███████╗███████╗
//  ██║████╗  ██║██╔════╝██╔═══██╗    ██╔══██╗██╔═══██╗╚██╗██╔╝██╔════╝██╔════╝
//  ██║██╔██╗ ██║█████╗  ██║   ██║    ██████╔╝██║   ██║ ╚███╔╝ █████╗  ███████╗
//  ██║██║╚██╗██║██╔══╝  ██║   ██║    ██╔══██╗██║   ██║ ██╔██╗ ██╔══╝  ╚════██║
//  ██║██║ ╚████║██║     ╚██████╔╝    ██████╔╝╚██████╔╝██╔╝ ██╗███████╗███████║
//  ╚═╝╚═╝  ╚═══╝╚═╝      ╚═════╝     ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚══════╝╚══════╝

.info {
    @include sidebar();
    padding: ($line-height-default / 2) ($sidebar-margin-inside / 2 - ($border-width - 0.01pt)); // padding overrides sidenote mixin, allowing for this feature's border
    border: $border-width solid $color-accent;
    border-bottom-right-radius: $core-element-border-radius;
    width: $sidebar-text-width - $sidebar-margin-inside;
    font-family: $font-text-secondary;
    font-size: $font-size-default * 0.8; // 8pt;
    color: $color-accent;
    h2, h3, h4, h5, h6 {
        font-family: $font-text-secondary;
        font-size: $font-size-default * 0.8; // 8pt;
        font-style: normal;
        text-transform: uppercase;
        font-weight: bold;
        letter-spacing: 0.01em;
        margin: 0;
        // Line space above images after headings
        & + p img:only-child {
            margin-top: $line-height-default;
        }
        // no space between headings and lists
        & + ul, & + ol {
        	margin-top: 0;
        }
    }
    // Space after paragraphs and lists in these elements
    p, ul, ol {
        margin-bottom: $line-height-default;
        text-indent: 0;
        // But no space between paras and lists, or lists and nested lists
        + ul, + ol {
            margin-top: -($line-height-default);
        }
    }
    // Images placed with kramdown syntax
    p img:only-child {
        max-width: $sidebar-text-width - $sidebar-margin-inside - ($sidebar-margin-inside / 2);
    }
    // No space after last element.
    // Parent padding takes care of this.
    & > *:last-child {
        margin-bottom: 0;
    }
    blockquote {
        margin: 0;
    }
    // Put the text-indent back on the following paragraph...
    + p {
        text-indent: $line-height-default;
    }
    // ...unless it follows a heading or a list
    h1 + & + p,
    h2 + & + p,
    h3 + & + p,
    h4 + & + p,
    h5 + & + p,
    h6 + & + p,
    ul + & + p,
    ol + & + p {
        text-indent: 0;
    }
}








//  ██████╗ ███████╗███████╗██╗███╗   ██╗██╗████████╗██╗ ██████╗ ███╗   ██╗███████╗
//  ██╔══██╗██╔════╝██╔════╝██║████╗  ██║██║╚══██╔══╝██║██╔═══██╗████╗  ██║██╔════╝
//  ██║  ██║█████╗  █████╗  ██║██╔██╗ ██║██║   ██║   ██║██║   ██║██╔██╗ ██║███████╗
//  ██║  ██║██╔══╝  ██╔══╝  ██║██║╚██╗██║██║   ██║   ██║██║   ██║██║╚██╗██║╚════██║
//  ██████╔╝███████╗██║     ██║██║ ╚████║██║   ██║   ██║╚██████╔╝██║ ╚████║███████║
//  ╚═════╝ ╚══════╝╚═╝     ╚═╝╚═╝  ╚═══╝╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝

.definition {
    @include sidebar();
    // padding: ($line-height-default / 2) ($sidebar-margin-inside / 2 - 0.995pt); // padding overrides sidenote mixin, allowing for this feature's border
    padding: ($line-height-default / 2) ($sidebar-margin-inside / 2 + 0.005pt); // padding overrides sidenote mixin, allowing for this feature's border
    border: $border-width solid $color-accent;
    border: 0;
    background: $color-accent;
    color: white;
    border-bottom-right-radius: $core-element-border-radius;
    width: $sidebar-text-width - $sidebar-margin-inside;
    font-family: $font-text-secondary;
    font-size: $font-size-default * 0.8; // 8pt;
    page-break-inside: avoid;
    page-break-after: avoid; // because it should always float beside the para it precedes
    text-indent: 0;
    // No space after last element.
    // Parent padding takes care of this.
    & > *:last-child {
        margin-bottom: 0;
    }
    .definition-term {
        font-weight: bold;
        // display: inline-block;
        // float: left;
        display: inline;
        margin-right: 0.2em;
        hyphens: manual;
    }
    .definition-description {
        display: inline;
        margin: 0;
        // Create a line break after each dd, in case a definition box
        // includes more than one definition.
        &:after {
            content: "";
            display: block;
        }
        // A visible warning if a definition term isn't in the glossary
        &.no-definition {
            background: $color-highlight;
        }
    }
}
// Don't indent paragraphs that, but for a definition
// or up to five, would follow a heading, list or blockquote;
// or would be followed by a div.footnote-detail.
// Note: div.footnote-detail is created by footnotes_pdf.js, 
// which only runs in Prince and cannot be seen in output HTML.
h1, h2, h3, h4, h5, h6,
.subheadline,
ol, ul,
blockquote {
    & + .definition + p,
    & + .definition + .definition + p,
    & + .definition + .definition + .definition + p,
    & + .definition + .definition + .definition + .definition + p,
    & + .definition + .definition + .definition + .definition + .definition + p,
    & + .definition + .footnote-detail + p,
    & + .definition + .definition + .footnote-detail + p,
    & + .definition + .definition + .definition + .footnote-detail + p,
    & + .definition + .definition + .definition + .definition + .footnote-detail + p,
    & + .definition + .definition + .definition + .definition + .definition + .footnote-detail + p,
    & + .definition + .footnote-detail + .footnote-detail + p,
    & + .definition + .footnote-detail + .footnote-detail + .footnote-detail + p,
    & + .definition + .footnote-detail + .footnote-detail + .footnote-detail + .footnote-detail + p {
        text-indent: 0;
    }
}
// Do indent paragraphs that, but for a floated definition
// or up to five, would follow another paragraph and be indented.
p,
.figure,
.slides,
.pullquote,
.video,
.info,
.pdf-sidebar {
    & + .definition + p,
    & + .definition + .definition + p,
    & + .definition + .definition + .definition + p,
    & + .definition + .definition + .definition + .definition + p,
    & + .definition + .definition + .definition + .definition + .definition + p {
        text-indent: $line-height-default;
    }
}








//  ██╗   ██╗██╗██████╗ ███████╗ ██████╗ 
//  ██║   ██║██║██╔══██╗██╔════╝██╔═══██╗
//  ██║   ██║██║██║  ██║█████╗  ██║   ██║
//  ╚██╗ ██╔╝██║██║  ██║██╔══╝  ██║   ██║
//   ╚████╔╝ ██║██████╔╝███████╗╚██████╔╝
//    ╚═══╝  ╚═╝╚═════╝ ╚══════╝ ╚═════╝ 


.video {
    @include sidebar();
    width: $sidebar-text-width - $sidebar-margin-inside + $border-width; // same as sidenote, plus $border-width because we set border to 0
    border: 0;
    page-break-inside: avoid;
    a.video-link {
        // don't let the link take up space
        display: block;
        line-height: 0;
    }
    img {
        border-bottom-right-radius: $core-element-border-radius;
        width: $sidebar-text-width; // same width as boxes
        height: $line-height-default * 6.5; // only works for 16/9 screen grabs
        margin-bottom: $line-height-default / 2!important; // with height, above, aligns text with baseline; !important to override .exercise > *:last-child
        max-width: none; // override 100% default for images
        margin-left: -($sidebar-margin-inside / 2 - ($border-width / 2 - 0.005pt)); // centers image in sidebar, given inherited sidenote padding
    }
    .video-description {
        font-family: $font-text-secondary;
        font-size: $font-size-default * 0.8;
        color: $color-text-secondary;
        // Include the link text after the description
        a:after {
            content: " " attr(href);
            color: $color-accent;
        }
    }
    // Featured videos appear in the main text area
    // Override most of `@include sidebar()`
    &.featured {
        width: $main-text-width;
        float: none;
        margin-top: $line-height-default;
        margin-bottom: $line-height-default;
        margin-outside: 0;
        margin-inside: 0;
        padding: 0;
        border: 0;
        img {
            height: $line-height-default * 13.5; // with margin-bottom, keeps baselines aligned, only works with 16/9 screen grabs
            width: auto;
            max-width: $main-text-width;
            margin-left: auto;
            margin-right: auto;
            margin-bottom: $line-height-default / 2; // with height, aligns baselines
        }
    }
}







//  ██████╗  ██████╗ ██╗  ██╗
//  ██╔══██╗██╔═══██╗╚██╗██╔╝
//  ██████╔╝██║   ██║ ╚███╔╝ 
//  ██╔══██╗██║   ██║ ██╔██╗ 
//  ██████╔╝╚██████╔╝██╔╝ ██╗
//  ╚═════╝  ╚═════╝ ╚═╝  ╚═╝


// General boxes in the flow of text.
// .box inherits a lot from the template partials.

.box {
    clear: none; // lets sidebar elements from preceding elements flow beside this one
    float: top;
    margin-top: 0; // flush at top of page; and why we can't do 'float: top unless-fit'
    padding: $line-height-default / 2;
    border: $border-width solid $color-accent;
    // No space after last element in box, padding takes care of that
    & > :last-child {
        margin-bottom: 0;
    }
    .sidenote, .footnote-detail {
        @include sidebar();
        // shift this note further outside to make up for padding on parent .box
        margin-outside: -($sidebar-text-width + $sidebar-margin-inside + ($line-height-default / 2)) - $border-width;
        margin-inside: $sidebar-margin-inside + ($line-height-default / 2);
        &:before {
            background: transparent; // remove 'border' from sidenotes in boxes
        }
    }
    & + p {
        text-indent: $line-height-default;
    }
    &.fixed {
        float: none;
        margin-top: $line-height-default;
    }
    .figure {
        width: $main-text-width - ($line-height-default) - 0.1pt; // the -0.1pt is to let sidebar elements, which are made too wide to avoid overlapping, not push the figure down
        .figure-body {
            width: $main-text-width - ($line-height-default) - 0.1pt; // the -0.1pt is to let sidebar elements, which are made too wide to avoid overlapping, not push the figure down
            margin-bottom: $line-height-default; // adds space where these figures are not normally floated
        }
        .figure-source {
            margin-outside: -($sidebar-text-width + $sidebar-margin-inside) - ($line-height-default / 2); // accounts for narrower figure-body
        }
        &.figure-no-source {
            width: $main-text-width - ($line-height-default) - 1.1pt; // the -1.1pt is min required to let sidebar elements, which are made too wide to avoid overlapping, not push the figure down
            display: inline-block; // required to let sidebar elements float beside
        }
        // a clearfix-like solution for exercise boxes not expanding to height of figure 
        // when figure is last the elementin an exercise box
        &:last-child:after {
            content: " "; // needs some content to take up space
            display: block; // needs this, perhaps to fill width
            clear: both; // must clear its parent's float
            margin-bottom: -($line-height-default); // remove space normally added after last element in exercise
        }
    }
    &.contains-figures {
        // If an exercise contains figures, its height can collapse,
        // leaving figures outside its borders. By adding this class
        // to the exercise, we float the entire figure, which forces it
        // to expand to its children's height. We also don't float the
        // figures, in order to keep them inside the exercise's borders.
        float: inside;
        .figure {
            float: none;
        }
    }
    .slides {
        margin: $line-height-default 0;
        .figure {
            margin: 0;
            width: (($main-text-width - $line-height-default * 1.5) / 2); // allows for padding on parent box
            .figure-body {
                width: (($main-text-width - $line-height-default * 1.5) / 2); // allows for padding on parent box
            }
            .figure-source {
                display: none;
            }
            &.summary {
                float: none;
                width: ($main-text-width + $sidebar-text-width + $sidebar-margin-inside) - $line-height-default;
                margin-outside: -($sidebar-text-width + $sidebar-margin-inside); // -60mm;
                margin-inside: 0;
                &.figure-no-source {
                    width: $main-text-width - ($line-height-default) - 1.1pt; // the -1.1pt is min required to let sidebar elements, which are made too wide to avoid overlapping, not push the figure down
                    display: inline-block; // required to let sidebar elements float beside
                    margin-outside: 0; // nothing in sidebar
                    display: block; // only way to prevent slides from floating over the summary
                }
                // Clear the float before slides begin
                &:after {
                    content: "";
                    display: block;
                    clear: both;
                }
                .figure-body {
                    float: inside;
                    width: ($main-text-width) - ($line-height-default);
                    margin: 0;
                }
                .figure-source {
                    width: $sidebar-text-width;
                    display: inline-block; // reverses display: none
                    float: outside;
                    margin-outside: 0;
                    .source {
                        width: $sidebar-text-width;
                        display: inline-block; // reverses display: none
                        padding: 0;
                    }
                }
            }
        }
    }
}








//  ███████╗ ██████╗ ██████╗ ███╗   ██╗ ██████╗ ███╗   ███╗██╗███████╗████████╗
//  ██╔════╝██╔════╝██╔═══██╗████╗  ██║██╔═══██╗████╗ ████║██║██╔════╝╚══██╔══╝
//  █████╗  ██║     ██║   ██║██╔██╗ ██║██║   ██║██╔████╔██║██║███████╗   ██║   
//  ██╔══╝  ██║     ██║   ██║██║╚██╗██║██║   ██║██║╚██╔╝██║██║╚════██║   ██║   
//  ███████╗╚██████╗╚██████╔╝██║ ╚████║╚██████╔╝██║ ╚═╝ ██║██║███████║   ██║   
//  ╚══════╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝ ╚═════╝ ╚═╝     ╚═╝╚═╝╚══════╝   ╚═╝   
//                                                                             
//  ██████╗  ██████╗ ██╗  ██╗███████╗███████╗                                  
//  ██╔══██╗██╔═══██╗╚██╗██╔╝██╔════╝██╔════╝                                  
//  ██████╔╝██║   ██║ ╚███╔╝ █████╗  ███████╗                                  
//  ██╔══██╗██║   ██║ ██╔██╗ ██╔══╝  ╚════██║                                  
//  ██████╔╝╚██████╔╝██╔╝ ██╗███████╗███████║                                  
//  ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚══════╝╚══════╝                                  
//                                                                             

// Einstein and Great Economists boxes
// Also see figures for these boxes in the Figures section

.einstein,
.great-economist,
.great-economists,
.economists,
.economist,
.find-out-more {
    // float: top unless-fit; // Decided against this. These seem to need to appear where they're placed in the flow...
    // .. if necessary, use local overrides listed in 'Fixes' below, e.g. `.float-top-unless-fit`.
    box-decoration-break: clone;
    clear: none; // lets sidebar elements from preceding elements flow beside this one
    background: cmyk(0%,0%,0%,5%);
    padding: ($line-height-default / 2);
    margin-bottom: ($line-height-default);
    border: 0;
    // width: $main-text-width - ($line-height-default / 2); // testing
    // No space after last element in box, padding takes care of that
    & > :last-child {
        margin-bottom: 0;
    }
    h2, h3, h4, h5, h6 {
        font-family: $font-text-main;
        font-size: $font-size-default * 1.2; // 12pt;
        color: $color-accent;
        font-style: italic;
        font-weight: normal;
        margin: 0;
        // Put the first bold word, e.g. 'Einstein', in a bar at the top
        strong:first-of-type {
            display: block;
            background: $color-accent;
            color: white;
            text-transform: uppercase;
            font-size: $font-size-default;
            font-family: $font-text-secondary;
            font-style: normal;
            font-weight: bold;
            padding-top: $line-height-default / 4;
            padding-right: $line-height-default / 2;
            padding-bottom: $line-height-default / 4;
            padding-left: $line-height-default / 2;
            margin-top: -($line-height-default / 2);
            margin-right: -($line-height-default / 2);
            margin-bottom: ($line-height-default / 2);
            margin-left: -($line-height-default / 2);
        }
        // When the heading is followed by an image
        // add space above the image.
        & + p > img:only-child {
            margin-top: $line-height-default * 0.25;
        }
    }
    // Avoid starting a box only to break it in the first paragraph.
    h3 + p:first-of-type {
        page-break-inside: avoid;
    }
    // If the heading follows a paragraph, add some space above it.
    p + h2,
    p + h3,
    p + h4,
    p + h5,
    p + h6 {
        margin: $line-height-default 0 0 0 !important;
    }
    .sidenote, .footnote-detail {
        @include sidebar();
        // shift this note further outside to make up for padding on parent .box
        width: ($sidebar-text-width - $sidebar-margin-inside) - ($border-width * 2); // $border-width from sidebar() border + $border-width to accommodate inside border created with :before background
        padding: 0 ($sidebar-margin-inside / 2 + 0.005pt);
        margin-outside: -($sidebar-text-width + $sidebar-margin-inside) - $border-width - ($line-height-default / 2); // shift a little for faux border
        margin-inside: $sidebar-margin-inside + $border-width + ($line-height-default / 2); // touches the edge of the text, so boxes can't overlap
        &:before {
            background: transparent; // remove 'border' from sidenotes in boxes
            margin-inside: -$sidebar-text-width;
        }
        // desperate measures: in the event our code to prevent sidenotes from before .economist 
        // boxes from overlapping sidenotes inside them fails, hide them completely.
        // This is less bad than inadvertently causing overlap that isn't immediately visible.
        z-index: -10;
    }
    // Footnotes in these elements
    @include box-contains-footnote();

    // Where figures and slides appear inside an Einstein or Great Economists box,
    // their border and background should match their parent box.
    // This means, too, that we shouldn't float them or we'll have floated figures
    // with odd-looking backgrounds lying about.
    .figure {
        float: none;
        max-width: $main-text-width - $line-height-default; // $line-height-default is for the padding on the parent economist box
        margin-top: $line-height-default;
        // margin-bottom: $line-height-default;
        img {
            width: $main-text-width - ($line-height-default * 2); // fits image inside parent box with colour around it
            border: ($line-height-default / 2) solid white; // add white space around artwork with none
        }
        // No indent on paras after figures in these boxes
        & + p {
            text-indent: 0;
        }
        .figure-body {
            margin-bottom: $line-height-default; // adds space where these figures are not normally floated
            width: $main-text-width - ($line-height-default) - 0.1pt; // the -0.1pt is to let sidebar elements, which are made too wide to avoid overlapping, not push the figure down
        }
        .figure-source {
            margin-outside: -($sidebar-text-width + $sidebar-margin-inside) - ($line-height-default / 2); // accounts for narrower figure-body
        }
        &.figure-no-source {
            width: $main-text-width - ($line-height-default) - 1.1pt; // the -1.1pt is min required to let sidebar elements, which are made too wide to avoid overlapping, not push the figure down
            display: inline-block; // required to let sidebar elements float beside
        }
        // Figures in these boxes should be followed by non-indented paras
        & + p,
        & + .sidenote + p,
        & + .footnote-detail + p {
            text-indent: 0;
        }
    }
    .slides {
        float: none;
        background: inherit;
        margin: $line-height-default 0;
        width: $page-width - $margin-inside - $margin-outside - $line-height-default;
        columns: 2;
        column-gap: $line-height-default / 2;
        text-align: left;
        .figure {
            float: none;
            margin: 0;
            width: (($main-text-width - $line-height-default * 1.5) / 2); // allows for padding on parent box
            padding: 0; // necessary to override inherited style
            .figure-body {
                width: (($main-text-width - $line-height-default * 1.5) / 2); // allows for padding on parent box
            }
            .figure-source {
                display: none;
            }
            &.summary {
                float: none;
                width: ($main-text-width + $sidebar-text-width + $sidebar-margin-inside) - $line-height-default;
                margin-top: ($line-height-default / 2);
                margin-bottom: $line-height-default;
                margin-outside: -($sidebar-text-width + $sidebar-margin-inside); // -60mm;
                margin-inside: 0;
                column-span: all;
                &.figure-no-source {
                    width: $main-text-width - ($line-height-default) - 1.1pt; // the -1.1pt is min required to let sidebar elements, which are made too wide to avoid overlapping, not push the figure down
                    display: inline-block; // required to let sidebar elements float beside
                    margin-outside: 0; // nothing in sidebar
                    display: block; // only way to prevent slides from floating over the summary
                }
                // Clear the float before slides begin
                &:after {
                    content: "";
                    display: block;
                    clear: both;
                }
                .figure-body {
                    float: inside;
                    width: ($main-text-width) - ($line-height-default);
                    margin: 0;
                }
                .figure-source {
                    width: $sidebar-text-width;
                    display: inline-block; // reverses display: none
                    float: outside;
                    margin-outside: 0;
                    .source {
                        width: $sidebar-text-width;
                        display: inline-block; // reverses display: none
                        padding: 0;
                    }
                }
            }
        }
        // Slides in these boxes should be followed by non-indented paras
        // and need a little space between.
        & + p,
        & + .sidenote + p,
        & + .footnote-detail + p {
            margin-top: $line-height-default / 2;
            text-indent: 0;
        }
    }
    &.contains-figures {
        // If an element contains figures, its height can collapse,
        // leaving figures outside its borders. By adding this class
        // to the element, we float the entire figure, which forces it
        // to expand to its children's height. We also don't float the
        // figures, in order to keep them inside the element's borders.
        float: inside;
        .figure {
            float: none;
        }
    }
    // No indent on paras after a (floated) figure after this box
    & + .figure + p {
        text-indent: 0;
    }
    // Unless the box itself is also floated, in which case keep the indent
    &.float-top + .figure + p,
    &.float-top-next + .figure + p,
    p + &.float-top + p,
    p + &.float-top-next + p {
        text-indent: $line-height-default;
    }
    // No margin above boxes floated to the top of the page
    &.float-top,
    &.float-top-next,
    &.page-break-before {
        margin-top: 0;
    }
}







//   ██████╗ ██╗   ██╗███████╗███████╗████████╗██╗ ██████╗ ███╗   ██╗███████╗
//  ██╔═══██╗██║   ██║██╔════╝██╔════╝╚══██╔══╝██║██╔═══██╗████╗  ██║██╔════╝
//  ██║   ██║██║   ██║█████╗  ███████╗   ██║   ██║██║   ██║██╔██╗ ██║███████╗
//  ██║▄▄ ██║██║   ██║██╔══╝  ╚════██║   ██║   ██║██║   ██║██║╚██╗██║╚════██║
//  ╚██████╔╝╚██████╔╝███████╗███████║   ██║   ██║╚██████╔╝██║ ╚████║███████║
//   ╚══▀▀═╝  ╚═════╝ ╚══════╝╚══════╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝

// Multiple-choice questions

.mcq, .question {
    // float: bottom unless-fit;
    box-sizing: border-box; // to include padding in the width
    width: $main-text-width - 0.1pt; // lets sidebar elements float beside mcq
    font-family: $font-text-secondary;
    font-size: $font-size-default * 0.9; // 9pt
    line-height: $line-height-default;
    background-color: tint($color-accent, 85%);
    border-bottom-right-radius: $core-element-border-radius;
    page-break-inside: avoid;
    padding: ($line-height-default / 2);
    margin: $line-height-default 0;
    h2, h3, h4, h5, h6 {
        font-family: $font-text-secondary;
        font-size: $font-size-default * 0.9; // 9pt
        font-style: normal;
        text-transform: uppercase;
        letter-spacing: 0.01em;
        line-height: $line-height-default;
        margin: 0;
        column-span: all;
    }
    p {
        text-indent: 0;
    }
    // Add some space around images when they're placed with markdown,
    // rather than in figure includes.
    p img:only-child {
        box-sizing: border-box;
        border: ($line-height-default / 2) solid white; // adds white space, same as other figuress in boxes
        max-width: ($main-text-width - 0.1pt) - $line-height-default;
    }
    ul {
        // Check boxes for unordered lists in MCQs
        &.mcq-questions, &.mcq-options {
            li {
                list-style: none;
                &:before {
                    content: "\2009";
                    float: left;
                    display: inline-block;
                    border: 0.75pt solid $color-text-main;
                    width: $font-size-default / 2; // 5pt;
                    height: $font-size-default / 2; // 5pt;
                    margin-left: -$line-height-default;
                    margin-top: $line-height-default / 4; // 3pt;
                }
                // Rarely, we use inline tables inside a list item
                table {
                    display: inline;
                    width: $main-text-width - ($line-height-default * 2);
                    margin: -($line-height-default) 0 0 0; // nasty hack for Prince
                    // where rows have only two cells, space them 50/50
                    td:nth-of-type(1):nth-last-of-type(2),
                    td:nth-of-type(2):nth-last-of-type(1) {
                        width: 50%;
                    }
                }
            }
        }
    }
    table {
        font-size: $font-size-default * 0.9;
        width: $main-text-width - $line-height-default;
    }
    .figure {
        width: ($main-text-width) - ($line-height-default * 2) - 0.1pt; // 0.1pt to allow sidebar elements to float beside
        float: none;
        margin-top: $line-height-default; // not the usual two lines above normal figures
        img {
            border: ($line-height-default / 2) solid white; // adds artwork space around images with none
            margin-bottom: 0; // overrides default, which adds $line-height-default
        }
        .figure-body {
            width: 100%; // avoid inheriting explicit width from main .figure
        }
        .figure-images {
            img {
                max-width: $main-text-width - ($line-height-default * 2); // width subtracted for mcq padding and white border around image
            }
            &.contains-2, &.contains-4, &.contains-8, &.contains-10 {
                text-align: justify;
                text-align-last: justify;
                img {
                    max-width: ($main-text-width / 2) - ($line-height-default) - 4mm;
                    padding: 0;
                    border: 1mm solid white;
                }
            }
        }
        .figure-source {
            margin-outside: -($sidebar-text-width + $sidebar-margin-inside) - ($line-height-default * 1.5); // accounts for narrower figure-body
            width: $sidebar-text-width;
            display: inline-block; // reverses display: none
            float: outside;
            .source {
                width: $sidebar-text-width - $line-height-default;
                display: inline-block; // reverses display: none
                padding: 0 ($sidebar-margin-inside / 2);
                margin: 0!important; // removes margin added to normal paragraphs in MCQs, which itself is !important :(
            }
        }
        &.figure-no-source {
            width: $main-text-width - ($line-height-default) - 1.1pt; // the -1.1pt is min required to let sidebar elements, which are made too wide to avoid overlapping, not push the figure down
            display: inline-block; // required to let sidebar elements float beside
            // If a figure has no source, caption or reference, then any description
            // which is hidden, is the last child. In that case, we need no space
            // below figure-images.
            &.figure-no-caption {
                .figure-images:nth-last-child(2) {
                    margin-bottom: 0;
                }
            }
        }
        // Less space between two figures in one MCQ
        & + .figure {
            margin-top: -($line-height-default / 2)!important;
        }
        // Not sure why we need this given float: none, but it is necessary
        // to stop text that follows the figure from wrapping/overlapping it.
        &:after {
            content: " ";
            display: block;
            clear: both;
        }
        & + p {
            text-indent: 0;
        }
    }
    // We don't show the answers in the print edition.
    .mcq-answers, .mcq-feedback {
        display: none;
    }
    // Add space before paragraphs that follow .mcq, and no indent
    & + p,
    & + .info + p,
    & + .sidenote + p,
    & + .footnote-detail + p    {
        margin-top: $line-height-default;
        text-indent: 0;
    }
    // Because of the hidden mcq-answers/mcq-feedback, we can't add bottom padding
    // with :last-child. So in these elements, we control spacing with
    // margin-top rather than the usual margin-bottom. We do have to
    // nuke this with !important :( This may change in future.
    p, ul, ol, blockquote {
        margin-bottom: 0 !important;
        margin-top: $line-height-default !important;
    }
    // Except the element after the first heading, which has no margin-top
    h1:first-child + *,
    h2:first-child + *,
    h3:first-child + *,
    h4:first-child + *,
    h5:first-child + *,
    h6:first-child + * {
        margin-top: 0 !important;
    }
    // Wide MCQs
    &.wide {
        max-width: none;
        width: $content-width;
        margin-outside: -($sidebar-text-width + $sidebar-margin-inside);
        columns: 2;
        .figure {
            display: block;
            column-span: all;
            .figure-images {
                background-color: white;
                width: $content-width - $line-height-default;
                // In a wide MCQ, multi-image figures need a different max-wdith
                &.contains-2, &.contains-4, &.contains-8, &.contains-10 {
                    img {
                        max-width: ($content-width / 2) - ($line-height-default) - 4mm;
                    }
                }
            }
            &.figure-no-source.figure-no-caption {
                margin-bottom: $line-height-default;
            }
        }
    }
    &.page-break-before {
        margin-top: 0;
    }
}







//  ██████╗ ██╗ █████╗ ██╗      ██████╗  ██████╗ ██╗   ██╗███████╗
//  ██╔══██╗██║██╔══██╗██║     ██╔═══██╗██╔════╝ ██║   ██║██╔════╝
//  ██║  ██║██║███████║██║     ██║   ██║██║  ███╗██║   ██║█████╗  
//  ██║  ██║██║██╔══██║██║     ██║   ██║██║   ██║██║   ██║██╔══╝  
//  ██████╔╝██║██║  ██║███████╗╚██████╔╝╚██████╔╝╚██████╔╝███████╗
//  ╚═════╝ ╚═╝╚═╝  ╚═╝╚══════╝ ╚═════╝  ╚═════╝  ╚═════╝ ╚══════╝


// Dialogue
// Draws on the EB template dl.dialogue styles

dl.dialogue {
    dt {
        font-variant: prince-opentype(c2sc, smcp);
        letter-spacing: 0.025em;
        &:last-of-type {
            page-break-before: avoid;
        }
    }
    & + .figure + p,
    & + .slides + p,
    & + .info + p,
    & + .sidenote + p,
    & + .footnote-detail + p {
        text-indent: 0;
    }
}





//  ██████╗ ██╗██████╗ ██╗     ██╗ ██████╗  ██████╗ ██████╗  █████╗ ██████╗ ██╗  ██╗██╗   ██╗
//  ██╔══██╗██║██╔══██╗██║     ██║██╔═══██╗██╔════╝ ██╔══██╗██╔══██╗██╔══██╗██║  ██║╚██╗ ██╔╝
//  ██████╔╝██║██████╔╝██║     ██║██║   ██║██║  ███╗██████╔╝███████║██████╔╝███████║ ╚████╔╝ 
//  ██╔══██╗██║██╔══██╗██║     ██║██║   ██║██║   ██║██╔══██╗██╔══██║██╔═══╝ ██╔══██║  ╚██╔╝  
//  ██████╔╝██║██████╔╝███████╗██║╚██████╔╝╚██████╔╝██║  ██║██║  ██║██║     ██║  ██║   ██║   
//  ╚═════╝ ╚═╝╚═════╝ ╚══════╝╚═╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚═╝  ╚═╝   ╚═╝   


// Bibliographies

// Don't apply normal list space-above to bibliographies
ul, ol {
    &.bibliography {
        margin-top: 0;
    }
}


//  ███████╗ ██████╗  ██████╗ ████████╗███╗   ██╗ ██████╗ ████████╗███████╗███████╗
//  ██╔════╝██╔═══██╗██╔═══██╗╚══██╔══╝████╗  ██║██╔═══██╗╚══██╔══╝██╔════╝██╔════╝
//  █████╗  ██║   ██║██║   ██║   ██║   ██╔██╗ ██║██║   ██║   ██║   █████╗  ███████╗
//  ██╔══╝  ██║   ██║██║   ██║   ██║   ██║╚██╗██║██║   ██║   ██║   ██╔══╝  ╚════██║
//  ██║     ╚██████╔╝╚██████╔╝   ██║   ██║ ╚████║╚██████╔╝   ██║   ███████╗███████║
//  ╚═╝      ╚═════╝  ╚═════╝    ╚═╝   ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚══════╝╚══════╝

// Footnotes
// Also see .sidenote and .footnote-detail above

sup[id^=fnref] {
    display: none;
}

.footnotes {
    color: $color-text-secondary;
}






//   ██████╗ ██╗      ██████╗ ███████╗███████╗ █████╗ ██████╗ ██╗   ██╗
//  ██╔════╝ ██║     ██╔═══██╗██╔════╝██╔════╝██╔══██╗██╔══██╗╚██╗ ██╔╝
//  ██║  ███╗██║     ██║   ██║███████╗███████╗███████║██████╔╝ ╚████╔╝ 
//  ██║   ██║██║     ██║   ██║╚════██║╚════██║██╔══██║██╔══██╗  ╚██╔╝  
//  ╚██████╔╝███████╗╚██████╔╝███████║███████║██║  ██║██║  ██║   ██║   
//   ╚═════╝ ╚══════╝ ╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   
//                                                                     
//  ██╗███╗   ██╗██████╗ ███████╗██╗  ██╗                              
//  ██║████╗  ██║██╔══██╗██╔════╝╚██╗██╔╝                              
//  ██║██╔██╗ ██║██║  ██║█████╗   ╚███╔╝                               
//  ██║██║╚██╗██║██║  ██║██╔══╝   ██╔██╗                               
//  ██║██║ ╚████║██████╔╝███████╗██╔╝ ██╗                              
//  ╚═╝╚═╝  ╚═══╝╚═════╝ ╚══════╝╚═╝  ╚═╝                              

// Endmatter defaults

.endmatter {
    width: $content-width;
    margin-outside: -($sidebar-text-width + $sidebar-margin-inside);
    column-count: 2;
    column-gap: $grid-unit-width;
    h1 {
        @include head-1-reverse();
        column-span: all;
        display: block;
        margin-outside: 0;
        // remove border above heading text
        &:before {
            // content: normal;
            border: 0;
        }
    }
    table {
        max-width: ($content-width / 2) - $grid-unit-width;
        width: auto;
    }
    .figure, .figure.figure-no-source {
        float: column-top-corner;
        width: ($content-width / 2) - $grid-unit-width;
        margin: 0 0 $line-height-default 0;
        .figure-body {
            width: ($content-width / 2) - $grid-unit-width;
            img {
                width: 100%;
            }
            table {
                max-width: 100%;
            }
        }
        &.fixed {
            float: none;
            margin-top: $line-height-default;
        }
        &.wide {
            column-span: all;
            width: $content-width;
            .figure-body {
                width: $content-width;
            }
        }
        &.float-column-bottom {
            float: column-bottom;
            margin-top: $line-height-default * 2;
            margin-bottom: 0;
        }
    }
}

@mixin endmatter-text() {
    font-size: $font-size-default * 0.8;
}

// Bibliography

.bibliography-page {
    .bibliography {
        @include endmatter-text();
    }
}

// Glossary and index
// These pages use all three columns in our grid.

.glossary-page,
.reference-index-page {
    width: $page-width - $margin-inside - $sidebar-margin-outside;
    margin-outside: -($sidebar-text-width + $sidebar-margin-inside);
    column-count: 3;
    column-gap: $grid-unit-width;
    .glossary,
    .reference-index {
        @include endmatter-text();
        columns: 1; // overrides template; columns provided by parent body element etc.
        .index-subhead {
            font-weight: bold;
            margin-top: $line-height-default;
            column-break-after: avoid;
            page-break-after: avoid;
        }
    }
    .glossary {
        dt {
            float: none; // overrides template, instead, we display inline
            display: inline;
            font-family: $font-text-secondary;
            font-weight: bold;
            font-size: $font-size-default * 0.7;
            margin-right: 0.5em;
            margin-top: -($font-size-default * 0.075); // In Prince output, Asap aligns slightly low on the baseline.
            &:after {
                content: normal;
            }
        }
        dd {
            margin: 0;
            // run in with dt
            display: inline;
            // force a line break after each definition
            &:after {
                content: "";
                display: block;
            }
        }
    }
}

// Copyright acknowledgements

.copyright-acknowledgements-page {
    h1 {
        // margin-bottom: $line-height-default * 5;
    }
    p {
        @include endmatter-text();
    }
}




//  ███╗   ███╗ █████╗ ████████╗██╗  ██╗███████╗
//  ████╗ ████║██╔══██╗╚══██╔══╝██║  ██║██╔════╝
//  ██╔████╔██║███████║   ██║   ███████║███████╗
//  ██║╚██╔╝██║██╔══██║   ██║   ██╔══██║╚════██║
//  ██║ ╚═╝ ██║██║  ██║   ██║   ██║  ██║███████║
//  ╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝   ╚═╝  ╚═╝╚══════╝

// Maths

// MathJax
// Only use these styles to position maths blocks, not to style
// the maths itself. Actual maths styling should be done, with caution,
// in the MathJax config in _includes/head-elements.
// See http://stackoverflow.com/a/25329062/1781075
// and http://docs.mathjax.org/en/latest/reference/CSS-styles.html
.MathJax_Display,
.MathJax_SVG_Display {
    margin: $line-height-default auto;
    page-break-before: avoid;
    // No indents on paras after maths, or after floated or sidebar elements after maths
    & + p,
    & + .info + p,
    & + .figure + p,
    & + .sidenote + p {
        text-indent: 0;
    }
    // Let users allow a page break after an elenemt before mathjax;
    // allow for the mathjax_preview span
    .allow-break-at-maths + & + &,
    .allow-break-at-maths + span + & {
        page-break-before: auto;
    }
}
// Remove space around maths in table cells, question lists
th, td,
.mcq-questions, .mcq-options {
    .MathJax_SVG_Display:last-of-type {
        margin-bottom: 0;
    }
    .MathJax_SVG_Display:first-of-type {
        margin-top: 0;
    }
}

// HTML/CSS superscripts over subscripts
// Only works for single-digit superscripts
.align-sup-on-sub {
    position: relative;
    sup {
        position: relative;
        left: -0.5em;
        font-size: 0.6em;
    }
    sub {
        font-size: 0.6em;
    }
}


// Leibniz supplements

.leibniz {
    // Every Leibniz starts at page 1
    counter-reset: page 1;
    h1 {
        @include head-1-reverse();
        display: block;
        margin-bottom: $line-height-default * 3;
        // remove border above heading text
        &:before {
            // content: normal;
            border: 0;
        }
    }
    // The intro paragraph(s)
    .intro {
        font-family: $font-text-secondary;
        line-height: $line-height-default * 1.2;
        margin: 0 0 $line-height-default 0;
        & + p {
            text-indent: 0;
        }
        // Extra space before whatever follows the intro
        & + *:not(.intro) {
            margin-top: $line-height-default * 2;
        }
    }
    // Text-width sidenotes in Leibnizes
    .text-width {
        margin-outside: -1pt; // corrects for usual sidenote shift to show faux border
        padding: 0 ($line-height-default / 2);
        // float: none;
    }
}


//  ███████╗██╗  ██╗ ██████╗ ██╗    ██╗    ██╗   ██╗██████╗ ██╗     
//  ██╔════╝██║  ██║██╔═══██╗██║    ██║    ██║   ██║██╔══██╗██║     
//  ███████╗███████║██║   ██║██║ █╗ ██║    ██║   ██║██████╔╝██║     
//  ╚════██║██╔══██║██║   ██║██║███╗██║    ██║   ██║██╔══██╗██║     
//  ███████║██║  ██║╚██████╔╝╚███╔███╔╝    ╚██████╔╝██║  ██║███████╗
//  ╚══════╝╚═╝  ╚═╝ ╚═════╝  ╚══╝╚══╝      ╚═════╝ ╚═╝  ╚═╝╚══════╝
//                                                                  
//  ██████╗  █████╗  ██████╗ ███████╗    ███╗   ██╗ ██████╗         
//  ██╔══██╗██╔══██╗██╔════╝ ██╔════╝    ████╗  ██║██╔═══██╗        
//  ██████╔╝███████║██║  ███╗█████╗      ██╔██╗ ██║██║   ██║        
//  ██╔═══╝ ██╔══██║██║   ██║██╔══╝      ██║╚██╗██║██║   ██║        
//  ██║     ██║  ██║╚██████╔╝███████╗    ██║ ╚████║╚██████╔╝██╗     
//  ╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚══════╝    ╚═╝  ╚═══╝ ╚═════╝ ╚═╝     


// Show the URL of a link with a show-url class.
a.show-url:after {
    content: " (" attr(href) ")";
}
// Show the page number of a link with a show-page-number class.
a.show-page-number:after {
    // use prince-script to only insert this content if we're
    // not already on the same page as the target reference.
    content: prince-script(pagereference, counter(page), target-counter(attr(href), page));
}






//  ██╗  ██╗███████╗ █████╗ ██████╗ ███████╗██████╗ ███████╗   
//  ██║  ██║██╔════╝██╔══██╗██╔══██╗██╔════╝██╔══██╗██╔════╝   
//  ███████║█████╗  ███████║██║  ██║█████╗  ██████╔╝███████╗   
//  ██╔══██║██╔══╝  ██╔══██║██║  ██║██╔══╝  ██╔══██╗╚════██║   
//  ██║  ██║███████╗██║  ██║██████╔╝███████╗██║  ██║███████║   
//  ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝╚══════╝   
//                                                             
//  ███████╗ ██████╗  ██████╗ ████████╗███████╗██████╗ ███████╗
//  ██╔════╝██╔═══██╗██╔═══██╗╚══██╔══╝██╔════╝██╔══██╗██╔════╝
//  █████╗  ██║   ██║██║   ██║   ██║   █████╗  ██████╔╝███████╗
//  ██╔══╝  ██║   ██║██║   ██║   ██║   ██╔══╝  ██╔══██╗╚════██║
//  ██║     ╚██████╔╝╚██████╔╝   ██║   ███████╗██║  ██║███████║
//  ╚═╝      ╚═════╝  ╚═════╝    ╚═╝   ╚══════╝╚═╝  ╚═╝╚══════╝


// Headers and footers
// -------------------

// Page headers

@mixin page-headers($theme-color) {
    // Appearance
    font-family: $font-display-main;
    font-size: $font-size-default * 0.8; // 8pt;
    line-height: $line-height-default; // 12pt;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: white;
    background-color: $theme-color;
    // Position
    text-align: outside;
    padding-top: $line-height-default + $bleed;
    padding-left: $line-height-default;
    padding-right: $line-height-default;
    vertical-align: top;
    margin-top: -($bleed);
    margin-bottom: $line-height-default * 2;
    margin-outside: -($sidebar-text-width / 2) - ($sidebar-margin-inside);
    margin-inside: -($margin-inside + $core-element-border-radius * 2);
    border-bottom-right-radius: $core-element-border-radius;
    border-bottom-left-radius: $core-element-border-radius;
}

@mixin page-header-corner-box($theme-color) {
    background-color: $theme-color;
    margin-top: -($bleed);
    margin-bottom: $line-height-default * 2;
    margin-inside: ($sidebar-text-width / 2) + ($sidebar-margin-inside);
    // padding-top: $line-height-default + $bleed; // do we need this?
    // We dont' have 'border-bottom-outside-radius' in Prince,
    // so we can't use `margin-outside: $bleed` or our border-bottom-outside
    // will show sinside the page trim. Instead, we have to permanently shift
    // the outside margin of this box off the page to hide the rounded corner.
    margin-outside: -($line-height-default * 2);
    border-bottom-right-radius: $core-element-border-radius;
    border-bottom-left-radius: $core-element-border-radius;
}

@page chapter:left {
    @top {
        @include page-headers($color-accent);
    }
    @top-left-corner {
        @include page-header-corner-box($color-accent);
    }
}
@page chapter:right {
    @top {
        @include page-headers($color-accent);
    }
    @top-right-corner {
        @include page-header-corner-box($color-accent);
    }
}
@page frontmatter:left {
    @top {
        @include page-headers($color-accent);
    }
    @top-left-corner {
        @include page-header-corner-box($color-accent);
    }
}
@page frontmatter:right {
    @top {
        @include page-headers($color-accent);
    }
    @top-right-corner {
        @include page-header-corner-box($color-accent);
    }
}
@page contents-page:left {
    @top {
        @include page-headers($color-accent);
    }
    @top-left-corner {
        @include page-header-corner-box($color-accent);
    }
}
@page contents-page:right {
    @top {
        @include page-headers($color-accent);
    }
    @top-right-corner {
        @include page-header-corner-box($color-accent);
    }
}

// Page numbers

@mixin page-numbers() {
    // Appearance
    font-family: $font-text-main;
    font-size: $font-size-default;
    line-height: $line-height-default;
    color: $color-text-secondary;
    // Position
    text-align: inside;
    margin-top: $line-height-default * 1.5;
    margin-bottom: $line-height-default * 1.5;
    margin-inside: ($sidebar-text-width + $sidebar-margin-inside + $sidebar-margin-outside) - $margin-inside;
    padding: $line-height-default / 2;
}

@mixin page-number-border-recto($theme-color) {
    border-left: $border-width solid $theme-color;
}
@mixin page-number-border-verso($theme-color) {
    border-right: $border-width solid $theme-color;
}

@page chapter:left {
    @bottom-left-corner {
        @include page-numbers();
        @include page-number-border-verso($color-accent)
    }
}
@page chapter:right {
    @bottom-right-corner {
        @include page-numbers();
        @include page-number-border-recto($color-accent)
    }
}
@page frontmatter:left {
    @bottom-left-corner {
        @include page-numbers();
        @include page-number-border-verso($color-accent)
    }
}
@page frontmatter:right {
    @bottom-right-corner {
        @include page-numbers();
        @include page-number-border-recto($color-accent)
    }
}
@page contents-page:left {
    @bottom-left-corner {
        @include page-numbers();
        @include page-number-border-verso($color-accent)
    }
}
@page contents-page:right {
    @bottom-right-corner {
        @include page-numbers();
        @include page-number-border-recto($color-accent)
    }
}

// Define all the overrides for theme 17
@page theme-17:first {
    @top {
        content: normal;
    }
    @top-right-corner {
        content: normal;
    }
}
@page theme-17:left {
    @top {
        content: $verso-top;
        @include page-headers($theme-17-color);
    }
    @top-left-corner {
        content: $verso-top-left-corner;
        @include page-header-corner-box($theme-17-color);
    }
}
@page theme-17:right {
    @top {
        content: $recto-top;
        @include page-headers($theme-17-color);
    }
    @top-right-corner {
        content: $recto-top-right-corner;
        @include page-header-corner-box($theme-17-color);
    }
}
@page theme-17:left {
    @bottom-left-corner {
        content: $verso-bottom-left-corner;
        @include page-numbers();
        @include page-number-border-verso($theme-17-color)
    }
}
@page theme-17:right {
    @bottom-right-corner {
        content: $recto-bottom-right-corner;
        @include page-numbers();
        @include page-number-border-recto($theme-17-color)
    }
}

// Define all the overrides for theme 18
@page theme-18:first {
    @top {
        content: normal;
    }
    @top-right-corner {
        content: normal;
    }
}
@page theme-18:left {
    @top {
        content: $verso-top;
        @include page-headers($theme-18-color);
    }
    @top-left-corner {
        content: $verso-top-left-corner;
        @include page-header-corner-box($theme-18-color);
    }
}
@page theme-18:right {
    @top {
        content: $recto-top;
        @include page-headers($theme-18-color);
    }
    @top-right-corner {
        content: $recto-top-right-corner;
        @include page-header-corner-box($theme-18-color);
    }
}
@page theme-18:left {
    @bottom-left-corner {
        content: $verso-bottom-left-corner;
        @include page-numbers();
        @include page-number-border-verso($theme-18-color)
    }
}
@page theme-18:right {
    @bottom-right-corner {
        content: $recto-bottom-right-corner;
        @include page-numbers();
        @include page-number-border-recto($theme-18-color)
    }
}


// Define all the overrides for theme 19
@page theme-19:first {
    @top {
        content: normal;
    }
    @top-right-corner {
        content: normal;
    }
}
@page theme-19:left {
    @top {
        content: $verso-top;
        @include page-headers($theme-19-color);
    }
    @top-left-corner {
        content: $verso-top-left-corner;
        @include page-header-corner-box($theme-19-color);
    }
}
@page theme-19:right {
    @top {
        content: $recto-top;
        @include page-headers($theme-19-color);
    }
    @top-right-corner {
        content: $recto-top-right-corner;
        @include page-header-corner-box($theme-19-color);
    }
}
@page theme-19:left {
    @bottom-left-corner {
        content: $verso-bottom-left-corner;
        @include page-numbers();
        @include page-number-border-verso($theme-19-color)
    }
}
@page theme-19:right {
    @bottom-right-corner {
        content: $recto-bottom-right-corner;
        @include page-numbers();
        @include page-number-border-recto($theme-19-color)
    }
}

// Define all the overrides for theme 20
@page theme-20:first {
    @top {
        content: normal;
    }
    @top-right-corner {
        content: normal;
    }
}
@page theme-20:left {
    @top {
        content: $verso-top;
        @include page-headers($theme-20-color);
    }
    @top-left-corner {
        content: $verso-top-left-corner;
        @include page-header-corner-box($theme-20-color);
    }
}
@page theme-20:right {
    @top {
        content: $recto-top;
        @include page-headers($theme-20-color);
    }
    @top-right-corner {
        content: $recto-top-right-corner;
        @include page-header-corner-box($theme-20-color);
    }
}
@page theme-20:left {
    @bottom-left-corner {
        content: $verso-bottom-left-corner;
        @include page-numbers();
        @include page-number-border-verso($theme-20-color)
    }
}
@page theme-20:right {
    @bottom-right-corner {
        content: $recto-bottom-right-corner;
        @include page-numbers();
        @include page-number-border-recto($theme-20-color)
    }
}


// Define all the overrides for theme 21
@page theme-21:first {
    @top {
        content: normal;
    }
    @top-right-corner {
        content: normal;
    }
}
@page theme-21:left {
    @top {
        content: $verso-top;
        @include page-headers($theme-21-color);
    }
    @top-left-corner {
        content: $verso-top-left-corner;
        @include page-header-corner-box($theme-21-color);
    }
}
@page theme-21:right {
    @top {
        content: $recto-top;
        @include page-headers($theme-21-color);
    }
    @top-right-corner {
        content: $recto-top-right-corner;
        @include page-header-corner-box($theme-21-color);
    }
}
@page theme-21:left {
    @bottom-left-corner {
        content: $verso-bottom-left-corner;
        @include page-numbers();
        @include page-number-border-verso($theme-21-color)
    }
}
@page theme-21:right {
    @bottom-right-corner {
        content: $recto-bottom-right-corner;
        @include page-numbers();
        @include page-number-border-recto($theme-21-color)
    }
}


// Define all the overrides for theme 22
@page theme-22:first {
    @top {
        content: normal;
    }
    @top-right-corner {
        content: normal;
    }
}
@page theme-22:left {
    @top {
        content: $verso-top;
        @include page-headers($theme-22-color);
    }
    @top-left-corner {
        content: $verso-top-left-corner;
        @include page-header-corner-box($theme-22-color);
    }
}
@page theme-22:right {
    @top {
        content: $recto-top;
        @include page-headers($theme-22-color);
    }
    @top-right-corner {
        content: $recto-top-right-corner;
        @include page-header-corner-box($theme-22-color);
    }
}
@page theme-22:left {
    @bottom-left-corner {
        content: $verso-bottom-left-corner;
        @include page-numbers();
        @include page-number-border-verso($theme-22-color)
    }
}
@page theme-22:right {
    @bottom-right-corner {
        content: $recto-bottom-right-corner;
        @include page-numbers();
        @include page-number-border-recto($theme-22-color)
    }
}

// No headers or footers on blank pages
@mixin blanks() {
    @top { content: normal; }
    @top-left { content: normal; }
    @top-right { content: normal; }
    @top-left-corner { content: normal; }
    @top-right-corner { content: normal; }
    @bottom { content: normal; }
    @bottom-left { content: normal; }
    @bottom-right { content: normal; }
    @bottom-left-corner { content: normal; }
    @bottom-right-corner { content: normal; }
}
@page theme-17:blank {
    @include blanks();
}
@page theme-18:blank {
    @include blanks();
}
@page theme-19:blank {
    @include blanks();
}
@page theme-20:blank {
    @include blanks();
}
@page theme-21:blank {
    @include blanks();
}
@page theme-22:blank {
    @include blanks();
}



//  ███████╗██╗██╗  ██╗███████╗███████╗
//  ██╔════╝██║╚██╗██╔╝██╔════╝██╔════╝
//  █████╗  ██║ ╚███╔╝ █████╗  ███████╗
//  ██╔══╝  ██║ ██╔██╗ ██╔══╝  ╚════██║
//  ██║     ██║██╔╝ ██╗███████╗███████║
//  ╚═╝     ╚═╝╚═╝  ╚═╝╚══════╝╚══════╝


// Fixes and layout hacks

// Fix elements in place, for when they must keep their position
// in the text flow, and not float to the top or bottom of the page.
.fixed#{$edition-suffix}, .float-none#{$edition-suffix} {
    float: none;
}
// Float an element to the top of bottom of a page
// Is part of _print-fitting.scss, but gets overridden by custom CSS
// so we're repeating it here.
.float-top#{$edition-suffix} {
    float: top;
}
.float-top-next#{$edition-suffix} {
    float: top next;
}
.float-bottom#{$edition-suffix} {
    float: bottom;
}
.float-bottom-next#{$edition-suffix} {
    float: bottom next;
}
.float-top-unless-fit#{$edition-suffix} {
    float: top unless-fit;
}
.float-bottom-unless-fit#{$edition-suffix} {
    float: bottom unless-fit;
}
.float-column-bottom#{$edition-suffix} {
    float: column-bottom;
    margin-top: $line-height-default * 2;
    margin-bottom: 0;
}

// Save a line (use sparingly!)

// Create save-1 through save-10
@for $i from 0 through 10 {
    .save-#{$i} {
        margin-top: -($line-height-default * $i);
    }
}
@for $i from 0 through 10 {
    .add-#{$i} {
        padding-top: ($line-height-default * $i);
    }
}
@for $i from 0 through 20 {
    .add-lines-#{$i} {
        padding-bottom: ($line-height-default * $i);
    }
}

// Warnings

 .low-res img, img.low-res {
    filter: blur(3pt);
}

// Set a unit to start at a given page
@for $i from 1 through 1200 {
    .page-#{$i} {
        counter-reset: page #{$i};
    }
}

// Spans that keep-together need extra rules
span.keep-together,
a.keep-together {
    // page-break-inside: avoid; // already inherits this from EB template, so not repeating it here.
    display: inline-block;
    text-indent: 0; // weird! but seems necessary to avoid an indent here
}

.keep-with-previous {
    page-break-before: avoid;
}

// Allow orphan (bottom of page) and widow (top of page) lines
.allow-orphans {
    orphans: 1;
}
.allow-widows {
    widows: 1;
}

// Turn off automatic hyphenation
.hyphens-manual {
    hyphens: manual;
}
